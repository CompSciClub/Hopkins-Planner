/**
 * @preserve Homepage countdown finale experience.
 * This file includes all functionality to render the countdown
 * finale. Depends on Tween.js, Three.js libraries and base.js.
 *
 * Vendor provided code. Compressed file for the live site,
 * this raw script at http://closure-compiler.appspot.com/ using the
 * default, "simple," optimization setting.
 *
 * @author mking@mking.me (Matt King)
 */

/**
 * Color palette used in shapes. Three.js requires colors to be in decimal form.
 */
var colors = [0x7deffa, 0x66ecf9, 0x6cedf9, 0x64ecf9, 0x5fecf9, 0x8df1fa, 0x62ecf9, 0x61ecf9, 0x6feef9, 0x74eef9, 0x6fedf9, 0x67edf9, 0x83f0fa, 0x6aedf9, 0x73eef9, 0x68edf9, 0xa4f4fb, 0xbcf7fc, 0x6bedf9, 0x8ff1fa, 0x69edf9, 0x77eff9, 0x71eef9, 0x7aeffa, 0x95f3fb, 0x6dedf9, 0x81f0fa, 0x87f1fa, 0x7eeffa, 0x79eff9, 0x87f0fa, 0x90f2fa, 0x63ecf9, 0x91f2fa, 0x65ecf9, 0x7aeff9, 0x96f2fa, 0xaff5fb, 0x86f0fa, 0x6eedf9, 0x7ff0fa, 0x80f0fa, 0x7feffa, 0x72eef9, 0x76eef9, 0x70eef9, 0x9cf3fb, 0xa8f5fb, 0x78eff9, 0x75eef9, 0x7beff9, 0x6eeef9, 0x9df3fb, 0xa6f4fb, 0x9bf3fb, 0x84f0fa, 0x77eef9, 0x67ecf9, 0x8ef1fa, 0x8af1fa, 0x89f1fa, 0x7ceffa, 0x80effa, 0xa9f4fb];
	// 	      0xd03a33, 0x5f344e, 0x6d354b, 0x5b405d];
//colors = [0xececea, 0x6a9c5f, 0xf7ad40, 0x3f94c3, 0x6cadd1, 0xafcfd9, 0xf9be68, 0xf9d5ac, 0xd95a43, 0xd03a33, 0x5f344e, 0x9bab94, 0x5f5f7e, 0xf2a2a8, 0xff4038, 0xd2142e];
//colors = [0x6e91a4, 0xbdd1d3, 0x24b24e, 0xf2a2a8, 0xd2142e, 0xff4038, 0x3c4d58, 0xdadde0, 0xf3f4f5, 0x6d7a82, 0xced2d5, 0xb6bcc0, 0x9ea6ac, 0x2d5f82, 0x95ff, 0xbfe5ff, 
//		0x80caff, 0x54636d, 0xf7ad40, 0x6a9c5f, 0x3f94c3, 0xf9d5ac, 0x6cadd1, 0xa9a451, 0x9bab94, 0xececea, 0xd03a33, 0x5f344e, 0xafcfd9, 0x5f5f7e, 0xd95a43,
//			0xefaab3, 0xd7273d, 0xe05769, 0xdc4357, 0xfae1e3, 0xe88390, 0xdb4357, 0xd9374c, 0xf7ced2, 0xe0596a, 0xe57684, 0xe15d6e, 0xe36b7b, 0xeb929d, 0xf3c1c7, 0xdc465a, 0xdb3d52, 0xed9ca6, 0xe88592, 0xeea6af, 0xe67986, 0xdd4a5e, 0xd83349, 0xdb3f53, 0xf1afb7, 0xed9aa4, 0xe98490, 0xe98491, 0xe8808d, 0xd6263e, 0xda3c52, 0xeb8f9a, 0xfbe8ea, 0xe7818f, 0xfec4c2, 0xfec7c5, 0xfeafac, 0xfa9797, 0xfea5a2, 0xfeb1ae, 0xfe8f8b, 0xfeb8b6, 0xfe605a, 0xfe6a64, 0xfecac9, 0xfedfde, 0xfe8b87, 0xfe6660, 0xfe7570]
//colors = [0xf6b351, 0x8a9f57, 0x6a9c5f, 0x629a6f, 0x519dc5, 0xf9d5ac, 0xf6b047, 0xd5a847, 0x6a9c5e, 0x4c96a4, 0x4496c4, 0x82b7d1, 0xf6b14c, 0xf7ad40, 0x97a154, 0x5e9979, 0x3f94c3, 0x4e9cc6, 0xf5c582, 0xf6ae44, 0xe3aa44, 0x6d9c5e, 0x699b5f, 0x4795af, 0x4296c3, 0x6baacd, 0xf6b049, 0xaaa350, 0x6c9d62, 0x72a069, 0x74a26c, 0x79a678, 0x71a068, 0x6d9e63, 0x599886, 0x4c9bc6, 0xf5bc69, 0xf6ae42, 0xecaf4d, 0x90b695, 0x8cb59c, 0x4e9aba, 0x4094c3, 0x61a5cb, 0xf7af46, 0xf6ad40, 0xf7b351, 0x549fc7, 0x4a99c5, 0xf6b556, 0xf6ad41, 0x7fa779, 0x79a676, 0x7ea778, 0x4b9ac5, 0x56a0c8, 0xf6af46, 0xf7ae43, 0xf8be6c, 0xf5ba63, 0xcdab52, 0x589ba1, 0x65a7cc, 0x4396c4, 0x4698c4, 0xcddde1, 0xf6b452, 0xf6b04a, 0xf7ae44, 0x90a056, 0x609a74, 0x3f94c2, 0x77b1ce, 0x529dc7, 0xf5cb8f, 0xf6b24d, 0xf7b557, 0xdfaa45, 0x6b9c5f, 0x4895ac, 0x529ec7, 0x509dc7, 0x7bb3d1, 0xe8894a, 0xea883c, 0xec9552, 0xea8e47, 0x8a896e, 0x4899c5, 0x5ea4c9, 0xd65c54, 0xd03c34, 0xd03a33, 
	//	0xd34941, 0xd44d45, 0xcb3934, 0x683b53, 0x418dba, 0x539ec7, 0x5da3ca, 0xd2463f, 0xdc756a, 0xd03d36, 0x983740, 0x5f344e, 0x515d80, 0x4195c3, 0x60a5ca, 0x4d9bc6, 0xdb7166, 0xd1413a, 0xd45047, 0xc43b37, 0x63344c, 0x5e3650, 0x4686b1, 0x4f9cc6, 0x4798c4, 0x4295c3, 0x64a7cb, 0xd44c44, 0xd45048, 0x6b4056, 0x65425b, 0xe19591, 0xd14039, 0xd13f37, 0xd75850, 0x705267, 0x60354f, 0x6e4c60, 0x68a9cb, 0x4497c4, 0x7eb5d0, 0xd5544b, 0xd55249, 0x653e56, 0x643c54, 0x5ea2c7, 0x4597c4, 0xd2443c, 0xab3a3e, 0x4d6f95, 0xececea, 0xd65b52, 0xd03b34, 0xcc3933, 0x6f344a, 0x5c3d59, 0x408fbd, 0x59a1c9, 0x9d373f, 0x506286, 0xd86459, 0xd03e37, 0xc73935, 0x66344c, 0x5e3752, 0x4288b5, 0x5da3c9, 0xd34a42, 0x8e3642, 0x545677, 0xdd6e5d, 0x5f354f, 0x6696b7];
//colors = [0xb00e01, 0x666666, 0x19fa9, 0x8d8d8d, 0x4a4a4a, 0x828282, 0xbbbbbb, 0x6b6b6b, 0xd2d2d2, 0x999999, 0xdddddd, 0x777777, 0x606060, 0x555555, 0xe8e8e8, 0xa4a4a4, 0xc6c6c6, 0x3ea32b, 0x3ca228, 0x95cd8b, 0xa8d59f, 0x6ab85b, 0x63b553, 0x4daa3a, 0xc8e5c2, 0x9ed194, 0xa1d297, 0x48a835, 0xb1daa9, 0xcfe8ca, 0x9acf90, 0x57af45, 0x6db95e, 0x61b450, 0x54ae43, 0xe7f4e5, 0x55ae44, 0xc6e4c0, 0xa2b6bf, 0x83e54, 0x43768b, 0xd1e4ec, 0x12465b, 0x83e55, 0x84057, 0x9445c, 0x94760, 0xb5c5cc, 0xa4a64, 0x537888, 0x8eb4c3, 0x83d52, 0xa4c67, 0xa4f6b, 0x54889d, 0xd5472, 0x708f9c, 0xa5471, 0xc4157, 0x94963, 0xb5573, 0xadbfc6, 0xa5270, 0x8bb5c6, 0x3e687a, 0xbccbd1, 0x456e7f, 0x719eb0, 0xcfe3eb, 0x94862, 0x7e9aa6, 0xc5d2d7, 0xbbd6e1, 0x86afbe, 0x94158, 0x78a8bb, 0xddecf1, 0x587d8c, 0xd3e5ec, 0xa9bcc4, 0xa5370, 0x94abb5, 0xa2c4d2, 0x7ba9bc, 0x4e7484, 0x80adbf, 0xb9c8ce, 0x83f55, 0x1d566e, 0xeaf3f7, 0x83a4f, 0x9445b, 0x49869e, 0x2c5a6d, 0x2a6379, 0x2b667f, 0x2c6a83, 0x6198af, 0x638593, 0x74929e, 0x83b51, 0x8425a, 0x9455d, 0xa5b9c1, 0x658795, 0x648b9b, 0x3e788e, 0xabccd9, 0xb6d4e0, 0x6a9cb0, 0x366274, 0xc6dde6, 0xe4358, 0xa4d68, 0x1f5064, 0x5c91a6, 0xc3dce5, 0x557a89, 0x8fa7b1, 0xbfced4, 0x155670, 0x4c7383, 0x829da8, 0xb2c2c9, 0xb2cfda, 0xafcdd9, 0xc1dae4, 0xe4eaec, 0xe4f0f4, 0xdee5e8, 0xeaeef0, 0xb3c4cb, 0x7997a2, 0x7ba5b6, 0x79a6b8, 0xe1eef3, 0x9cc2d1, 0x1e617c, 0xc445c, 0xb4962, 0x42798f, 0x9435b, 0x498197, 0x8eb6c7, 0x3c7c95, 0xc5e7f, 0xc6183, 0xd688c, 0xd6d92, 0x5598b3, 0x1b5f79, 0xb5877, 0xe7199, 0xcce1e9, 0x7ab0c5, 0x257da0, 0xd9e9f0, 0xe6f95, 0x157398, 0xd6a8f, 0x145975, 0x155d79, 0x24789a, 0x17495e, 0x194c61, 0x124e66, 0x16516a, 0x286c87, 0x41819a, 0xaecfdc, 0x779a58, 0x6a9c5f, 0x6c9c59, 0xf7ad40, 0x3f94c3, 0x629a62, 0x6c9d5d, 0xf7a835, 0x3c92c2, 0xfdecd1, 0x79b4d5, 0x5f9656, 0x689a5c, 0x659959, 0xf7ab3b, 0xfbd398, 0xd0a443, 0x3c93c5, 0x4999c6, 0x69acd0, 0xe0eef5, 0xf9b341, 0xfde7c5, 0xdbeaf3, 0xd03a33, 0xeeb7b5, 0x5b304a, 0xcd2e28, 0xf6dcda, 0x973741, 0x5f344e, 0x477ca5, 0x95c4dd, 0x4d9cc7, 0x572a45, 0xcec1c9, 0x8b6b7d, 0xc0dceb, 0xd44942, 0xcf352e, 0x59344f, 0x3495c7, 0x3e95c5, 0x734f66, 0x7b576d, 0xaaa9a9, 0x979696, 0x231f20, 0xa4a2a2, 0xdedede, 0x262223, 0xe9e9e9, 0x302c2d, 0xd2d1d2, 0x929091, 0xb5b3b4, 0xb3b2b2, 0x383435, 0xe0dfe0, 0xa6a5a5, 0xcac9c9, 0x949293, 0x726f70, 0xe7e6e7, 0x7a7878, 0xbdbcbd, 0x4d4a4b, 0x504d4e, 0x332f30, 0x908e8e, 0xaeacad, 0xd8d7d8, 0xd6d5d5, 0xb9b8b8, 0xdad9d9, 0x524f50, 0x3e3a3b, 0xb7b5b6, 0x8b898a, 0xc3c2c2, 0xb0aeaf, 0x737171, 0x3a3738, 0xb4b3b3, 0xcdcccc, 0xbcbabb, 0x282425, 0xe3e3e3, 0x585555, 0x878585, 0x6f6c6d, 0xdcdbdb, 0x656263, 0xcbcacb, 0xd3d2d2, 0x2d6152, 0x316e5c, 0x306c5a, 0x2d6958, 0x2a6856, 0x286554, 0x256452, 0x22624f, 0x20614e, 0x1d5e4c, 0x195d49, 0x185b47, 0x316455, 0x33705e, 0x2d6c59, 0x286755, 0x226450, 0x1e604d, 0x1b5f4b, 0x195e4a, 0x336e5c, 0xaec1bb, 0xdee6e4, 0xdee5e3, 0xe5ebe9, 0x195a47, 0x195c49, 0x155240, 0x185c48, 0x326b5a, 0x2b5f50, 0x2d6454, 0xe8edec, 0x2d5b4e, 0x2f6857, 0x2b6756, 0x205c4a, 0x1c5846, 0x215e4c, 0x28604f, 0x396659, 0x1a5342, 0x88a49c, 0x1d5645, 0x235c4b, 0x195645, 0xdae2e0, 0xd8e1de, 0xd7e0de, 0x174e3e, 0x276452, 0x256150, 0x1c5c49, 0x165744, 0x124d3c, 0x296251, 0x1d5d4a, 0x1d5a48, 0x185846, 0x245949, 0x215546, 0x5c8075, 0x51796e, 0x296352, 0x5e8378, 0x1f5344, 0x2b6654, 0x23604e, 0x4a7669, 0xbacac5, 0xd4b39, 0x48786a, 0x74835, 0x235647, 0xc7d3cf, 0x205a49, 0x578175, 0x376356, 0x2a6453, 0x185141, 0x1a5b48, 0xc9d5d1, 0x1c5142, 0x97afa9, 0x104536, 0x255d4d, 0x155542, 0x125441, 0x12523f, 0xf4f3c, 0x4402f, 0x165945, 0x125743, 0x44431, 0x4c796c, 0xb6c8c2, 0x1b5444, 0x8eaaa2, 0x8ba89f, 0x9cb3ac, 0x175442, 0x285d4e, 0x688c82, 0x6d9186, 0xaabeb8, 0x9fb6b0, 0x266653, 0x1b5e4a, 0x72948a, 0x316053, 0xa5bab4, 0x265b4c, 0x205848, 0xd2dfdb, 0x517d70, 0x346658, 0xc5d1cd, 0x426e61, 0xe0e6e4, 0xe2e8e6, 0x2e6655, 0x12503e, 0x306a59, 0xdbe4e1, 0xbaccc7, 0x829d95, 0xd3dcd9, 0x3b6b5d, 0xb3c5c0, 0x37685a, 0x5e887b, 0xd5e0dd, 0xbfcfca, 0xc6d5d0, 0xd6dfdc, 0x729188, 0x78988f, 0x75978d, 0x114938, 0x7b9b92, 0x82a097, 0xb2bcb9, 0xbbc6c3, 0xcdd9d6, 0xdce8e5, 0xbfc9c6, 0xabb6b2, 0xd2ddda, 0xd1ddd9, 0xd0ddda, 0xd0dcd8, 0xcfdbd8, 0xc4cdca, 0xd4e0dc, 0xdbe7e4, 0xdae6e3, 0xc2cecb, 0xc0cbc8, 0xd6e3df, 0xd6e2de, 0xd1d7d6, 0xc9d3d0, 0xd8e4e0, 0xc4cfcc, 0xc1cdc9, 0xd4e1dd, 0xd1dad8, 0xc3d0cc, 0xd9dedd, 0xbfccc8, 0xd0d6d4, 0xcdd6d4, 0xcad6d3, 0xb3c1bd, 0x696767, 0xbcbaba, 0x1b1919, 0x494949, 0x383636, 0x444242, 0x464444, 0x6a6868, 0x7a7979, 0x191818, 0x9a9a9a, 0x2f2d2d, 0x787777, 0x7a7a7a, 0xd6d6d6, 0x575555, 0xe0c0c, 0xeaeaea, 0x373535, 0x262626, 0xa0909, 0x9e9e9e, 0x929090, 0x5f5e5e, 0xd0b0b, 0x8b8b8b, 0x181717, 0x393737, 0x989696, 0x3a3838, 0x100e0e, 0xb0a0a, 0x121111, 0xb3b1b1, 0x535151, 0xc0c0c0, 0x8a8888, 0x111111, 0x666464, 0xe1e1e1, 0x161414, 0x171616, 0xb0b0b0, 0xbebcbc, 0xe0e0e, 0x585656, 0xc3c3c3, 0xe6e6e6, 0x403f3f, 0x151313, 0x3f3e3e, 0x9b9b9b, 0xa9a9a9, 0x717070, 0xb5b5b5, 0x828181, 0x7d7c7c, 0xd7d7d7, 0x1d1b1b, 0x212020, 0x737272, 0x6f6d6d, 0x706e6e, 0x6e6c6c, 0x6a6a6a, 0x1e1c1c, 0xa8a7a7, 0x232121, 0x979595, 0x262424, 0x4f4e4e, 0xdedddd, 0xadadad, 0x525050, 0x868484, 0x636262, 0x2d2b2b, 0xcdcdcd, 0x3e3d3d, 0x7f7e7e, 0x484646, 0x5b5b5b, 0x838383, 0x7f7f7f, 0x201f1f, 0x9d9d9d, 0xd4d4d4, 0x555353, 0xebeaea, 0x494747, 0x282727, 0xb6b6b6, 0xacacac, 0x242222, 0x939191, 0xe0e0e0, 0x8f8d8d, 0x767676, 0x626161, 0x292828, 0x8e8c8c, 0x4d4c4c, 0x474545, 0xc7c7c7, 0x9a9898, 0xdd4d61, 0xd8344a, 0xe36b7b, 0xfbe7ea, 0xd00823, 0xd2142e, 0xd10f29, 0xeb95a1, 0xd2152f, 0xd00722, 0xf1b6bd, 0xe26979, 0xf3c0c7, 0xd72d44, 0xd1112b, 0xd1102a, 0xd2112c, 0xfae5e8, 0xec9aa5, 0xd2122d, 0xd1102b, 0xdf586a, 0xd10e29, 0xe57685, 0xe67988, 0xdb4559, 0xcf0420, 0xd8364c, 0xdc495d, 0xd00b26, 0xf7d8dd, 0xe98b98, 0xd21630, 0xd2132d, 0xd2122c, 0xf1b4bc, 0xe37181, 0xd00a25, 0xdf5b6d, 0xd10d28, 0xeda2ac, 0xefadb5, 0xcf0621, 0xd10f2a, 0xfbeaec, 0xd31a33, 0xf9dee2, 0xcf0723, 0xf4c6cc, 0xde5568, 0xd41f38, 0xe57887, 0xf0afb8, 0xe67e8c, 0xf8dade, 0xce021d, 0xd52139, 0xd5273f, 0xd2132e, 0xf5ccd2, 0xf9e0e3, 0xd00c28, 0xd00924, 0xea8f9b, 0xd5253e, 0xd9394f, 0xf9e1e5, 0xcf0521, 0xeea6b0, 0xf7d6db, 0xcf031f, 0xd72f47, 0xf3c5cb, 0xe7808e, 0xd10c27, 0xd31932, 0xf7d5da, 0xf1b7bf, 0xffc4c2, 0xffaca9, 0xffadaa, 0xff3f37, 0xff4038, 0xff5f58, 0xff3b33, 0xffeae9, 0xff5952, 0xff3d35, 0xff928e, 0xff362e, 0xff625c, 0xff342b, 0xff3c34, 0xff352c, 0xff3a32, 0xff8a85, 0xff372f, 0xff5750, 0xff554e, 0xff7a75, 0xff3931, 0xff7671, 0xffc9c7, 0xff332a, 0xff473f, 0xffdedd, 0xff362d, 0xff3128, 0xec4f26, 0xec4d23, 0xeb4a1f, 0xeb471c, 0xf8c1b2, 0xef6c49, 0xeb491e, 0xec532a, 0xf2876a, 0xf39278, 0xf4957c, 0xf17a5a, 0xf17c5e, 0xf6b19f, 0xeb4619, 0xef6945, 0xf38d71, 0xeb4418, 0xf49d85, 0xeb4519, 0xec4a20, 0xf07453, 0xf7b7a5, 0xf8bdae, 0xec4e24, 0xed572f, 0xeb461b, 0xeb4317, 0xfad5cb, 0xf9c6b8, 0xfce1da, 0xf9c9bc, 0xf5a18b, 0xec4c22, 0xeb4215, 0xf2896d, 0xfdeae5, 0xfce5df, 0xf17e60, 0xfdeeea, 0xf5a994, 0xf9cdc1, 0xf0714f, 0xfbddd5, 0xf6ad99, 0xfbd8ce, 0xec5127, 0xf7b4a2, 0xee5f38, 0xf07757, 0xe2e1e1, 0xe2e1de, 0xdededc, 0xdbdbd7, 0xdcdbd7, 0xd9d8d3, 0xd8d7d3, 0xd5d5d3, 0xc8c8c5, 0xebebe9, 0xe9e9e7, 0xe9e8e6, 0xe7e7e5, 0xe8e6e4, 0xe6e5e3, 0xe4e3e1, 0xe2e1dd, 0xe0dfdb, 0xdeddd9, 0xdfdcd9, 0xdddcd7, 0xdad9d4, 0xe7e7e7, 0xebeae8, 0xe5e4e0, 0xe3e2de, 0xe1e0dc, 0xdfdeda, 0xececea, 0xeae9e7, 0x878785, 0xe6e6e5, 0xe6e5e1, 0xe1e1dd, 0xdbdad5, 0x6d6d6d, 0xe23804, 0xe75210, 0xe95412, 0xdddcd8, 0xdddad5, 0xeaeae8, 0xe5e5e1, 0xe4450a, 0xe6500e, 0xdedbd6, 0xeae0da, 0xe85311, 0xeb5f23, 0xefebe8, 0xe64d0d, 0xe75313, 0xe95112, 0xe9ebeb, 0xdcdcd7, 0xdbd8d3, 0xeeeae7, 0xe74f10, 0xe74c08, 0xecd4c9, 0xeaecea, 0xe4e4e2, 0xdcd9d4, 0xe6e6e2, 0xe0ddda, 0xe95010, 0xe9e8e8, 0xe7e4e4, 0xe8e8e6, 0xe7e6e2, 0x9d9d9c, 0xdeded9, 0xe3e0da, 0xeae8e6, 0xe0e0db, 0xe1e0df, 0xd1cfca, 0x3d3d3d, 0x333333, 0x5d5d5d, 0xd1d1d1, 0xc5c5c5, 0x8e8e8e, 0x888888, 0x7d7d7d, 0x393939, 0x464646, 0x343434, 0xcecece, 0x7e7e7e, 0x595959, 0x8a8a8a, 0x353535, 0x4d4d4d, 0x6c6c6c, 0xe5e5e5, 0x858585, 0x616161, 0x515151, 0xb1b1b1, 0x696969, 0x9c9c9c, 0xb9b9b9, 0xc9c9c9, 0xa1a1a1, 0x373737, 0x6e6e6e, 0x929292, 0x707070, 0x797979, 0xcfcfcf, 0x4f4f4f, 0x686868, 0xd5d5d5, 0xbdbdbd, 0x383838, 0x878787, 0xcbcbcb, 0xc8c8c8, 0xc1c1c1, 0xd9d9d9, 0xe4e4e4, 0x717171, 0x414141, 0xc2c2c2, 0x434343, 0xdfdfdf, 0x4c4c4c, 0x575757, 0x6f6f6f, 0xaeaeae, 0x757575, 0x3f3f3f, 0x5f5f5f, 0x404040, 0x131313, 0x0, 0xe6e6e7, 0xbdbdbe, 0x535353, 0x747475, 0x161617, 0x3b3c3c, 0xa1a1a2, 0x2b2b2c, 0xd1d1d2, 0x6c6d6d, 0x898a8a, 0x232323, 0x1d1e1e, 0x676768, 0xb0b0c, 0x1f1f1f, 0x19191a, 0x8d8d8e, 0xfbca99, 0xf99c3b, 0xf8932a, 0xf9a248, 0xa3a3a3, 0xfcd2a8, 0xf89124, 0xf8952d, 0xf88e1c, 0xbebfbf, 0xb3b3b4, 0x454546, 0xf88f1f, 0xf89731, 0xf89020, 0x30304, 0x5a5b5b, 0xf8942c, 0xfddfc1, 0x4e4f4f, 0x7e7e7f, 0xf99f43, 0xfbbd81, 0x70708, 0xfaac5d, 0xfde7d0, 0x7c7c7d, 0xf8942b, 0xf89a39, 0xb4b4b5, 0xfbb874, 0xf8952c, 0x202021, 0x858586, 0xfab36a, 0xfaaa59, 0x989898, 0xf99937, 0xf89226, 0xfbb670, 0xfbc289, 0xf0f0f, 0xbcbcbc, 0x2e2e2f, 0xdbdbdb, 0xfcd6af, 0xb9b9ba, 0x4c4c4d, 0xe8e8e9, 0x545455, 0x787879, 0x101111, 0x5d5d5e, 0x656566, 0x181818, 0xb0b0b1, 0xd6d6d7, 0x767777, 0x808081, 0x303030, 0x4d4d4e, 0x5f5f60, 0x8c8c8d, 0x555556, 0xe2e2e3, 0x969797, 0xb7b7b7, 0xa0a0a1, 0x5b5c5d, 0x888889, 0xc1c2c2, 0xafafb0, 0x272727, 0xd5d5d6, 0xb1b1b2, 0x9b9c9c, 0xababac, 0x585858, 0xc9c9ca, 0x1b1b1c, 0x3a3a3a, 0x49494a, 0xd4d4d5, 0x9e9f9f, 0x99999a, 0x636363, 0xe7e8e8, 0x646465, 0xa5a5a6, 0x9d9d9e, 0xdfe0e0, 0x949495, 0x616162, 0xa4a4a5, 0x313132, 0x9ce3, 0x9de4, 0x7ed0f2, 0xa2e5, 0x4a4e5, 0xf47920, 0xf37316, 0xf47317, 0xf47519, 0xfde9da, 0xf4771d, 0xf37214, 0xfef0e6, 0xfde7d7, 0x3a3e5, 0xfeede2, 0xf6934b, 0xfcd4b8, 0xf47418, 0xf4761b, 0xf4761c, 0xf4791f, 0xfde2cf, 0xf47215, 0x151112, 0xc4c3c4, 0x201c1d, 0xf47417, 0x353132, 0xfcdec9, 0x100c0d, 0xfde6d6, 0xc0708, 0xd0cfd0, 0xc8c7c7, 0x1b1617, 0x484445, 0xf5802b, 0x9f9d9e, 0xc8c7c8, 0xf37113, 0xf79651, 0xf4771e, 0xf69046, 0xf37011, 0xf8ad76, 0x181415, 0xf4781e, 0x130e0f, 0x1d191a, 0xfac39b, 0xfdeadc, 0x9a9899, 0xfde1cd, 0x242021, 0xe2e1e2, 0xf37112, 0xf4771c, 0xfac096, 0xf9b482, 0x423f40, 0xfef1e8, 0xf37215, 0xfcd6bc, 0xb7b6b6, 0x787576, 0xacaaab, 0xf36f0f, 0xf47e28, 0x2a2627, 0xfaba8c, 0xf58432, 0xf9b17c, 0xfbccab, 0xf79a57, 0x898687, 0x444142, 0x403d3d, 0xbcbbbc, 0x4a4748, 0xfabd91, 0xf79d5c, 0xd1d0d0, 0xf6954d, 0xfbd3b6, 0xf58a3c, 0xf47b24, 0xc1c0c1, 0xf9ae79, 0x8d8b8b, 0xf68f44, 0xf58839, 0x4d494a, 0xe6e5e5, 0xf36c0a, 0xfcd9c1, 0xfeefe4, 0xf8a86e, 0xf5822f, 0xf5812d, 0xf4781f, 0xfef2ea, 0xf8a66b, 0xea7e6, 0x6d6b6b, 0x161213, 0x706d6e, 0x211d1e, 0x1a1617, 0x221e1f, 0x9c9b9b, 0x1b1718, 0x171314, 0x171213, 0x585556, 0x1f1b1c, 0x454142, 0xd9d8d8, 0x191416, 0x130f10, 0x2c2829, 0xe0e0df, 0x312d2e, 0xaaa8a9, 0x636061, 0x403d3e, 0x2e2b2c, 0x828081, 0x565353, 0x858384, 0x1e1a1b, 0xd2d1d1, 0x1c1819, 0x322f30, 0xacabab, 0xd0cfcf, 0x5c595a, 0xe5e4e4, 0xa2a0a1, 0xd8d7d7, 0x999797, 0x191516, 0x5a5758, 0xc5c4c5, 0xc7c6c6, 0xc2c1c1, 0x5f5c5d, 0xcecdcd, 0x6b6869, 0x797777, 0x4e4b4c, 0x625f60, 0x848282, 0xaeacac, 0xa5a3a3, 0xc0bfbf, 0x605e5e, 0xe0dfdf, 0x3d3a3a, 0xb6b4b5, 0x8a8889, 0x272425, 0x141011, 0x545152, 0x898788, 0x7a7879, 0x9b9a9a, 0xc9c8c8, 0xa7a6a6, 0xbab9b9, 0xabaaaa, 0x807d7e, 0x110c0d, 0x514e4e, 0xbdbcbc, 0xe4e3e4, 0x7c7a7a, 0x2d292a, 0xcccbcb, 0x727071, 0x4d4a4a, 0xb2b1b1, 0xc4c3c3, 0x9e9c9d, 0xe6e5e6, 0x646162, 0x292526, 0xb3b1b2, 0x939292, 0x817f7f, 0xbcbbbb, 0xc1c0c0, 0xa6a4a4, 0x767475, 0x716f6f, 0x575455, 0x4b4849, 0x494546, 0xbfbebe, 0x757373, 0x151011, 0x211c1e, 0xe4e4e3, 0x474445, 0xcfcece, 0xdbdada, 0x918f90, 0xdee8ed, 0x6b909f, 0x6791a2, 0xe1edf3, 0x6a8ea3, 0x6e91a4, 0x648a98, 0x95acb7, 0x6e92a2, 0x6d8fa9, 0x7191a5, 0x6e92a5, 0x6f92a8, 0x6c92a4, 0xadc5d1, 0x6f8fa3, 0xa3b5be, 0x6f8b99, 0x7191a1, 0x75909c, 0x6c90a4, 0x7194a5, 0x728d9b, 0x6d939f, 0x6c92a1, 0x7d9aaa, 0xa6bbc5, 0x6d8ea0, 0x698da0, 0xbdcfd8, 0x7090a0, 0xe6f1f5, 0x7195a8, 0x6c90a6, 0x6c8a9d, 0xc4d7e1, 0x7491a7, 0x6a91a5, 0x6c90a3, 0x6d91a7, 0xcddfe8, 0x7a94a0, 0x829daa, 0x6e94a6, 0xdbebf3, 0x6a94a6, 0x7293a1, 0x93a6af, 0x6e8ea3, 0x7595a1, 0x769bae, 0x698ba1, 0x7f96a2, 0xc0cdd3, 0xb4c5cd, 0xadc1cb, 0xc2d0d7, 0x6b96a7, 0x9bb0bb, 0x6e8e9a, 0x7397ab, 0x778caf, 0xc3d3da, 0x2eaf5b, 0x7595a7, 0xd7e7ef, 0x61949a, 0x24b24e, 0x6290a8, 0x20b44a, 0x879eaa, 0x30b85e, 0x6793ab, 0x25b057, 0x21b046, 0x20b14a, 0x3fbe66, 0x6d8d9e, 0x6c94aa, 0x25b04e, 0xe6f3f9, 0x24ac49, 0x6b8c9a, 0x22b14d, 0x1dad50, 0x15b145, 0x53c377, 0x6dca8a, 0x18b74b, 0x6a90a2, 0x24b149, 0x2ab352, 0x49b56f, 0x21b44d, 0x23b351, 0x1dba4d, 0x1eb64f, 0x8ed8a4, 0x25b54e, 0x17b34b, 0xc9e3d8, 0x1cb346, 0x25b44a, 0x70bf89, 0x1cb34b, 0x28ab53, 0x6c92a7, 0x8aa4b2, 0x698694, 0xe8fde8, 0x8ba1ac, 0x99b4c3, 0x728ea3, 0x29b04c, 0x35aa5c, 0x1dad48, 0xcbdbe3, 0xc9d5db, 0x28b750, 0x698d9e, 0x3dad67, 0x7b99a6, 0x6e929f, 0xb6c9d4, 0xd1dfe6, 0x698b9d, 0xd9e5eb, 0xe0e5e7, 0xe8f7fe, 0x658da2, 0x7691a1];
//colors = [0xe4e4e4, 0x9c9c9c, 0x5c5c5c, 0x444444, 0xc0c0c, 0x000000, 0x3c3c3c, 0xececec, 0x2c2c2c, 0x6b6b6b, 0x8b8b8b, 0xcccccc, 0x636363, 0x7c7c7c, 0x131313, 0x1b1b1b, 0xd2d2d2, 0xbcbcbc, 0xb3b3b3, 0xdbdbdb, 0xacacac, 0x535353, 0x747474, 0xe9eaec, 0xcdd3db, 0xbcc5d2, 0xafbacb, 0xa9b5c7, 0xa7b4c7, 0xaab6c8, 0xb0bbcb, 0xbac3d0, 0xc7cdd6, 0xdbdce0, 0xf4f1ed, 0xb7c1cf, 0x59759e, 0x3c6095, 0x305995, 0x315c99, 0x35609e, 0x3663a1, 0x3664a3, 0x3463a5, 0x3263a5, 0x3264a5, 0x3565a5, 0x3f6aa4, 0x4e73a5, 0x7a92b2, 0xc1c6cd, 0xdedede, 0xedeceb, 0xeeeff2, 0x798fae, 0x3b5f94, 0x44699f, 0x567aae, 0x6284b6, 0x6789bb, 0x678bbc, 0x648abd, 0x6289bd, 0x608abf, 0x5f8bc1, 0x5d8bc2, 0x5a8bc3, 0x5387c1, 0x427bbc, 0x3974b8, 0x366fb3, 0x356bae, 0x4471ac, 0x6383ae, 0xa7b2c2, 0xe5e3de, 0xf1efee, 0xc8d0db, 0x2c5187, 0x5173a6, 0x7996bf, 0x7493be, 0x7091bf, 0x6e91bf, 0x6b8fc0, 0x698ec0, 0x668dc0, 0x658ec2, 0x638ec3, 0x6392c6, 0x6394c9, 0x5d94ca, 0x4785c3, 0x4786c3, 0x4887c4, 0x4585c3, 0x4583c4, 0x4381c1, 0x407cbf, 0x2e6ab0, 0x3c69a5, 0x97a6b9, 0xd8d7d6, 0xedecec, 0x8c9fba, 0x2e548b, 0x728fb9, 0x819cc2, 0x7897c0, 0x7695c1, 0x7495c3, 0x7195c2, 0x6f94c4, 0x6c92c4, 0x6992c5, 0x6894c6, 0x6896c9, 0x6799cc, 0x649acc, 0x4c8dc8, 0x4e8fc9, 0x4e92ca, 0x4f93cc, 0x4f93cd, 0x4e93cd, 0x4d91cc, 0x4b8eca, 0x4a8aca, 0x4282c5, 0x2c6cb4, 0x4e79ae, 0x90a2ba, 0xd3d4d5, 0xf3f1ee, 0x7087a8, 0x5979a6, 0x829cbf, 0x809bc2, 0x7c9ac2, 0x7b9ac4, 0x789ac4, 0x7699c5, 0x7398c6, 0x7198c7, 0x6e96c8, 0x6c97c8, 0x6c99cb, 0x6b9ccd, 0x6a9ecf, 0x5595cb, 0x5094cb, 0x5298ce, 0x549bd0, 0x549cd1, 0x559ed2, 0x559fd3, 0x569fd4, 0x549ed3, 0x529ad2, 0x4f96cf, 0x4b91cd, 0x4488c7, 0x3c78bd, 0x4875ab, 0xa6afbd, 0xe5e3e0, 0x8a9cb7, 0x4b6b9b, 0x89a0c3, 0x839dc3, 0x819dc3, 0x7f9dc5, 0x7c9dc6, 0x7a9cc7, 0x789cc8, 0x769bc9, 0x729ac9, 0x719acb, 0x6f9bcc, 0x6e9dce, 0x6da0d1, 0x67a0d1, 0x5296cc, 0x559ad0, 0x559ed1, 0x58a1d3, 0x59a3d4, 0x5aa5d5, 0x5ba7d7, 0x5ba8d8, 0x5caad9, 0x5aa9d9, 0x59a7d8, 0x57a2d7, 0x519dd3, 0x4e94cf, 0x4688c8, 0x3671b4, 0x7c93b2, 0xcfcfd1, 0xededec, 0xd8dde6, 0x4f6c9a, 0x8ea5c6, 0x88a0c4, 0x84a0c4, 0x83a0c6, 0x81a0c8, 0x7fa0c9, 0x7c9fca, 0x7a9fca, 0x789ecc, 0x759dcd, 0x729dce, 0x719ecf, 0x71a1d1, 0x71a5d4, 0x609dd1, 0x5499d0, 0x589dd2, 0x5aa0d4, 0x5ba3d5, 0x5da6d7, 0x5ea9d9, 0x5facda, 0x60aedb, 0x61b0dc, 0x61b1dc, 0x60b2dc, 0x5fb0dd, 0x5daedb, 0x58a6d9, 0x549fd5, 0x4b91cf, 0x3d7dc1, 0x4c77ae, 0xbabdc1, 0xe6e6e3, 0x6982a5, 0x7690b6, 0x8ba2c4, 0x88a3c5, 0x87a3c7, 0x84a2c8, 0x82a2ca, 0x80a2cb, 0x7ea2cc, 0x7ba2cd, 0x7aa0cf, 0x77a0cf, 0x75a0cf, 0x74a1d2, 0x73a4d4, 0x74a8d7, 0x5296ce, 0x589cd2, 0x5b9fd5, 0x5da3d6, 0x5ea6d8, 0x60a9d9, 0x61acdb, 0x62aedc, 0x64b0de, 0x66b3df, 0x65b5e0, 0x66b6e0, 0x65b8e0, 0x63b8e0, 0x61b6df, 0x5eb0de, 0x509ad3, 0x4387c8, 0x3c72b0, 0x9ea9b8, 0xe1dfdd, 0xe4e7ec, 0x365a8c, 0x92a8c7, 0x8ca4c6, 0x89a4c7, 0x88a3c8, 0x86a4ca, 0x84a4cb, 0x81a4cd, 0x7fa4ce, 0x7da3cf, 0x7ba2cf, 0x78a1d0, 0x76a2d2, 0x75a4d4, 0x76a8d6, 0x66a0d4, 0x5598d1, 0x5a9fd5, 0x5ca2d6, 0x5fa5d8, 0x60a8da, 0x62abdc, 0x64addd, 0x66b0de, 0x67b3e0, 0x68b5e0, 0x69b8e1, 0x69b9e2, 0x6abbe3, 0x69bde3, 0x68bee3, 0x66bde2, 0x61b6e1, 0x5cacdd, 0x529fd6, 0x468ccc, 0x3d76b7, 0x91a0b5, 0xdddbda, 0x536e95, 0x7e96b9, 0x91a7c7, 0x8da6c7, 0x8ba6c9, 0x88a6cb, 0x86a6cc, 0x86a6cd, 0x83a6ce, 0x80a6d0, 0x7ea6d1, 0x7ca5d2, 0x79a3d2, 0x77a5d4, 0x77a6d5, 0x78a9d7, 0x5c9bd1, 0x589dd3, 0x5ca0d5, 0x5ea3d8, 0x61a7da, 0x62a9dc, 0x65acde, 0x66afdf, 0x68b2e0, 0x6ab4e1, 0x6bb7e3, 0x6cb9e3, 0x6dbde4, 0x6ebde6, 0x6ebfe7, 0x6dc1e5, 0x6cc3e5, 0x69c2e5, 0x64bbe3, 0x5db1df, 0x54a2d8, 0x498fce, 0x2e6db5, 0xa1a9b5, 0xdddddc, 0x325585, 0x9cb0cd, 0x90a6c7, 0x8ea8c8, 0x8ca7ca, 0x89a8cb, 0x88a7cd, 0x86a8ce, 0x84a7d0, 0x81a7d1, 0x7fa6d2, 0x7aa5d3, 0x78a5d4, 0x77a6d6, 0x76a8d7, 0x5799d2, 0x5b9ed5, 0x5da1d6, 0x62a8db, 0x63abdc, 0x66adde, 0x67b0e0, 0x6ab3e1, 0x6bb6e2, 0x6cb8e4, 0x6fbce5, 0x70bde6, 0x71c0e7, 0x71c1e7, 0x70c3e7, 0x71c5e8, 0x6ec6e7, 0x6ac6e6, 0x66bee4, 0x5eb2e0, 0x54a1d9, 0x478dce, 0x346db2, 0xabb1b9, 0xcbd3de, 0x5875a0, 0x9baecc, 0x90a7c8, 0x8ea7ca, 0x8ca7cb, 0x8aa8cc, 0x88a8ce, 0x87a7ce, 0x84a8d1, 0x82a6d1, 0x7fa6d3, 0x7da6d2, 0x7aa4d3, 0x78a6d4, 0x77a7d5, 0x6fa5d7, 0x5fa4d9, 0x65abdd, 0x67addf, 0x68b1df, 0x6bb4e1, 0x6cb6e2, 0x6eb9e5, 0x70bce5, 0x72bfe7, 0x73c1e8, 0x74c3e8, 0x74c5e8, 0x73c5e9, 0x72c8e8, 0x6fc9e8, 0x6bc6e7, 0x65bee4, 0x5cb0e0, 0x519dd7, 0x4587ca, 0x547cae, 0xcac9c8, 0xbdc7d6, 0x7d95b7, 0x94aac8, 0x90a8c8, 0x8ea9ca, 0x8da9cb, 0x8baacd, 0x89a9ce, 0x87a9d0, 0x82a8d3, 0x80a7d3, 0x7aa6d4, 0x78a6d6, 0x79a9d7, 0x68a0d4, 0x589ad2, 0x65abde, 0x67aedf, 0x68b1e1, 0x6cb4e2, 0x6db7e3, 0x6fbae5, 0x72bce6, 0x75c2e9, 0x76c4e9, 0x76c6e9, 0x77c8e9, 0x75c9e9, 0x73caea, 0x6fcbe8, 0x6ac6e7, 0x63bbe4, 0x58aadd, 0x4b92d1, 0x3b77bb, 0xa7adb3, 0xe3e2e1, 0xb8c2d3, 0x8da1c0, 0x91a8c9, 0x8fa8ca, 0x8da8cc, 0x8ba9cd, 0x8aa9cf, 0x84a9d1, 0x82a9d3, 0x7ea6d2, 0x7ba6d5, 0x78a6d5, 0x609dd2, 0x68b1e0, 0x6cb5e3, 0x6eb7e4, 0x71bbe5, 0x72bde7, 0x74c1e8, 0x77c3ea, 0x78c4e8, 0x78c7eb, 0x78c9ea, 0x77caeb, 0x75ccea, 0x72cde9, 0x6dcbe8, 0x67c3e6, 0x5db3e2, 0x509bd6, 0x3d7ec4, 0x6e88ab, 0xdfdad5, 0xb6c2d2, 0x8fa3c3, 0x91a9c9, 0x90aacb, 0x8daacc, 0x8baace, 0x89aad0, 0x87abd0, 0x85a9d1, 0x80a7d2, 0x7ea6d3, 0x79a7d5, 0x7aa9d8, 0x5c9ad1, 0x589bd2, 0x71bbe7, 0x73bde7, 0x75c1e8, 0x79c5eb, 0x79c8eb, 0x7acaeb, 0x78cbeb, 0x77cbea, 0x74cdeb, 0x70cdea, 0x6ac6e8, 0x61b7e3, 0x53a0d9, 0x3f82c7, 0x6081aa, 0xded8d1, 0xb9c5d4, 0x859dbc, 0x94aac9, 0x91a9ca, 0x90a9cb, 0x8daacd, 0x89a9d0, 0x88aad0, 0x85aad1, 0x7aa7d5, 0x5a99d0, 0x599bd2, 0x76c1e9, 0x77c4ea, 0x79c6eb, 0x79c7ec, 0x7bcaed, 0x7acbeb, 0x78cceb, 0x75ceeb, 0x71cee9, 0x6bc8e8, 0x61b8e4, 0x53a0d8, 0x3e80c4, 0x738baa, 0xdfdbd6, 0xc6cfdb, 0x627ea7, 0x9ab0cd, 0x90aacc, 0x8da9cd, 0x88abd2, 0x7aa8d5, 0x77a7d6, 0x5797d0, 0x76c1ea, 0x78c4eb, 0x7ac6eb, 0x79c8ec, 0x7ccaec, 0x7accec, 0x79cdec, 0x76ceeb, 0x6bc7e8, 0x5fb6e2, 0x519dd5, 0x3b7abe, 0xa6abb1, 0xe2e1e0, 0xeef0f3, 0x365989, 0x9eb3cf, 0x91aaca, 0x8eaacd, 0x8ba9cf, 0x89aacf, 0x88abd1, 0x7ba7d5, 0x72a5d5, 0x5697d0, 0x5b9ed6, 0x7ac8ec, 0x7ccced, 0x7acbec, 0x6ac5e7, 0x4e97d2, 0x4b7bb3, 0xc1c1c0, 0x5c779b, 0x7a95ba, 0x93adcc, 0x90abcc, 0x8eaacc, 0x8baacf, 0x85a8d1, 0x7ba9d6, 0x6ea2d4, 0x5595cf, 0x7ccbec, 0x76ceea, 0x71cde9, 0x67c2e5, 0x5babdc, 0x498dcc, 0x6a88ad, 0xd5d4d3, 0x395d90, 0x96aecd, 0x8eabcd, 0x8babcf, 0x7ca9d6, 0x6aa0d3, 0x5395cf, 0x7ccaeb, 0x75cdea, 0x65bde3, 0x58a7da, 0x3678bc, 0xa9adb4, 0xe4e5e4, 0x6b86a9, 0x819dc2, 0x8babce, 0x89a9cf, 0x7ca9d5, 0x669ed3, 0x5394ce, 0x78cdec, 0x75cdeb, 0x6ec9e8, 0x62b9e1, 0x4f9dd6, 0x4d7baf, 0xcac7c3, 0xc9d2dd, 0x6788b1, 0x93aece, 0x8eabce, 0x7ea7d2, 0x639cd1, 0x5294ce, 0x7acaed, 0x79ccec, 0x78ccec, 0x74ccea, 0x6dc8e7, 0x61b5e0, 0x4591cf, 0x7890ac, 0xd4d2d0, 0xe0e4e9, 0xa4b4ca, 0x7c96bb, 0x6c8db8, 0x6889b5, 0xb6bec9, 0xd9dcde, 0x6b89b0, 0x97b0d0, 0x7aa8d6, 0x5d98cf, 0x5495cf, 0x79cbec, 0x6cc6e7, 0x5fb2df, 0x3f88c9, 0x94a0ae, 0xdbdad9, 0xe0e5eb, 0x859cbf, 0x4770ac, 0x265ca8, 0x336fb7, 0x3c7cc1, 0x2d70ba, 0x95a0ad, 0xcfd1d2, 0x718eb2, 0x97b1d1, 0x8fabce, 0x8cabcf, 0x88a9d1, 0x79a6d5, 0x5793cd, 0x599bd1, 0x78cbec, 0x73cbe9, 0x5eb0df, 0x3d85c6, 0xa1a7b0, 0xdfdede, 0xa1b3cc, 0x6184b7, 0x7c9dcb, 0x6a94c9, 0x4282c4, 0x4f97cf, 0x56a1d5, 0x448ac5, 0xa6acb2, 0xc6cbd0, 0x698ab1, 0x97b1d0, 0x8cacce, 0x88aad1, 0x5191cb, 0x7bcaec, 0x73ccea, 0x3d86c7, 0x9ca5ae, 0x859dbf, 0x6b8dbf, 0x8dabd4, 0x89abd6, 0x6aa0d2, 0x55a4d5, 0x65b4df, 0x67b4de, 0x5794c3, 0xb6b8bb, 0xaeb9c8, 0x6d8eb7, 0x94aecf, 0x8fadce, 0x8cabd0, 0x71a1d2, 0x4f8ecb, 0x6cc7e7, 0x60b3e0, 0x428dcc, 0x8597ac, 0xd7d6d5, 0x9aafcc, 0x7898c6, 0x94b0d7, 0x8dafd7, 0x8fb9de, 0x66aedb, 0x6abae2, 0x70bfe4, 0x5fafdc, 0x6691b7, 0xd3d2d0, 0x5d7ba1, 0x88a5c8, 0x92acce, 0x90accf, 0x89abd0, 0x7ba5d5, 0x689bd1, 0x7acced, 0x74cdea, 0x6dc9e8, 0x61b7e1, 0x4b98d3, 0x5e83ac, 0xd0cdc8, 0xb6c4d7, 0x95b0d6, 0x92b1d8, 0x95bcdf, 0x87bfe2, 0x67b9e0, 0x6fc0e5, 0x6ab9e0, 0x478fc7, 0xa2acb9, 0xd6d8da, 0x406799, 0x99b2d1, 0x92adcf, 0x8faccf, 0x89abcf, 0x85aad2, 0x7ea7d3, 0x7aa5d4, 0x5c94cc, 0x508ecb, 0x5494cf, 0x7cc9ec, 0x6ecae9, 0x56a3d9, 0x3472b6, 0xbebcba, 0xeaeaea, 0xe0e5ed, 0x597cb1, 0xa2badd, 0x95b2d8, 0x98bbde, 0x95c5e4, 0x68b5df, 0x68bbe2, 0x68b7e0, 0x509cd1, 0x7795b3, 0xe5dfd9, 0x657fa0, 0x7c99bf, 0x96b0cf, 0x8caacf, 0x80a8d3, 0x508bc8, 0x508eca, 0x5494ce, 0x78cded, 0x75ceea, 0x70cce9, 0x66c0e4, 0x59a9db, 0x4286c7, 0x7e92ad, 0x7f99bf, 0xa7bcde, 0x99b3d8, 0x99b8dd, 0x9ac4e2, 0x67b1dd, 0x61b3df, 0x62b1dd, 0x539fd3, 0x5e89b5, 0xd0cdca, 0xeaeaeb, 0x395f8e, 0xa0b6d4, 0x93aecd, 0x92accf, 0x8fadcf, 0x82a8d2, 0x719fd0, 0x4986c5, 0x4f8dca, 0x5392ce, 0x5698d0, 0x599dd4, 0x5ca1d5, 0x61a8db, 0x64abdd, 0x69b1e0, 0x6cb5e2, 0x70bbe7, 0x7ccbed, 0x76ceec, 0x71cce9, 0x69c4e7, 0x5baede, 0x4d94d1, 0x567faf, 0xc9c8c7, 0x849fc7, 0x9eb6d9, 0x9db8dc, 0x94b9de, 0x65a8d8, 0x57a9d9, 0x57a6d8, 0x4690ca, 0x5985b5, 0xc8c7c8, 0xd3dbe4, 0x5779a4, 0xa1b7d3, 0x93adcd, 0x91accd, 0x8facce, 0x8cabce, 0x8aaad0, 0x87aad1, 0x82a7d1, 0x7fa6d1, 0x80a8d4, 0x5c90c8, 0x4985c5, 0x4e8bc8, 0x5190cb, 0x5596cf, 0x589cd3, 0x5ba0d5, 0x5ca3d8, 0x60a6da, 0x62aadc, 0x65adde, 0x67b1e0, 0x6eb7e3, 0x71bae6, 0x75c1e9, 0x78c4ea, 0x72cee9, 0x5fb4e1, 0x509ad5, 0x4279b9, 0xb6b7b8, 0xe6e6e6, 0xc4cfe0, 0x8aa4cd, 0xa8bedd, 0x7ba0d0, 0x4d8cc8, 0x4e98d1, 0x4b96d0, 0x3578b9, 0x859cb8, 0xd0d0d1, 0xefeeed, 0xc0cbd9, 0x7c96b9, 0x9ab0ce, 0x94adcd, 0x8aa9d0, 0x7ba4d1, 0x457fc0, 0x4983c2, 0x4c88c6, 0x4f8ec9, 0x5494cd, 0x569ad1, 0x599ed4, 0x64acdd, 0x6bb3e1, 0x6fb9e5, 0x7ac7ec, 0x7ccaed, 0x60b8e3, 0x529fd7, 0x3c7dc1, 0x8f9bad, 0xdfdedb, 0x7995bc, 0x86a2cd, 0x4b79bb, 0x3068b3, 0x3c78bc, 0x3c78b8, 0x5781b2, 0xb9bec5, 0xe5e3e2, 0xbbc7d5, 0x8ea5c4, 0x96accc, 0x93accc, 0x91abcd, 0x8ba9ce, 0x87a8ce, 0x83a7d0, 0x80a5cf, 0x7fa5d0, 0x5e8fc6, 0x457fbe, 0x4780c0, 0x4984c4, 0x4d8ac7, 0x5192cc, 0x5496ce, 0x579bd2, 0x5aa0d5, 0x5da4d7, 0x5fa7d9, 0x65afde, 0x68b3e1, 0x6eb9e4, 0x74c1e9, 0x77c3e9, 0x7bcaeb, 0x6ac7e8, 0x61b7e4, 0x53a1d9, 0x3f82c6, 0x6884a9, 0xded9d3, 0x9db1cc, 0x6988b5, 0x6a88b3, 0x7b95b8, 0x9bacc4, 0xc7ccd4, 0xece9e5, 0xbac5d5, 0x90a7c4, 0x94abca, 0x92abcb, 0x8da9cc, 0x8ba9cc, 0x86a7ce, 0x82a4cd, 0x7fa4cd, 0x7ca1ce, 0x4e82bf, 0x447bbc, 0x457dbd, 0x4681c0, 0x4a86c3, 0x4d8dc8, 0x5293cb, 0x5498cf, 0x5aa1d4, 0x5ea5d8, 0x61a9da, 0x64aede, 0x6ab5e2, 0x6db8e4, 0x70bce6, 0x76c2e9, 0x77c5ea, 0x78caeb, 0x76cceb, 0x73cdea, 0x6ecce9, 0x69c5e8, 0x5fb5e2, 0x519fd7, 0x3e80c6, 0x6382a9, 0xdfd9d3, 0xbbc6d6, 0x889ebe, 0x92aaca, 0x8fa9ca, 0x8ca8ca, 0x8aa7cc, 0x85a5cc, 0x81a3cc, 0x7fa3cd, 0x6c96c6, 0x4177b8, 0x4278b8, 0x4279ba, 0x437cbc, 0x4a88c4, 0x4e8fc8, 0x5295cc, 0x559acf, 0x589ed3, 0x5ba4d6, 0x5ea7d8, 0x65b0de, 0x68b4e0, 0x6cb7e3, 0x72bee7, 0x74c2e8, 0x75c4e9, 0x77c8ea, 0x76caea, 0x74cbea, 0x6cc9e8, 0x66bfe6, 0x5bafe0, 0x4d97d3, 0x3b7ac0, 0x8d9cae, 0xe0dedb, 0xc3cdd9, 0x6c87ad, 0x98aecb, 0x8fa8c9, 0x8ba6ca, 0x88a6ca, 0x86a4cb, 0x82a3cb, 0x80a1cb, 0x7d9fca, 0x4b7db7, 0x3d72b3, 0x3f74b4, 0x3f75b5, 0x4076b8, 0x427bbb, 0x4681bf, 0x4988c4, 0x4d8fc9, 0x5195cc, 0x539acf, 0x58a0d3, 0x5aa5d6, 0x5fa9d9, 0x63aedd, 0x66b2df, 0x6ab6e1, 0x6dbae3, 0x6fbde6, 0x72c0e7, 0x74c5e9, 0x75c7e9, 0x73c8e9, 0x71cae9, 0x6dcae8, 0x68c3e7, 0x60b7e3, 0x54a4da, 0x498dcd, 0x4476b3, 0xbebebe, 0xdee3e9, 0x406190, 0xa0b3ce, 0x90a7c6, 0x8aa5c8, 0x88a4c8, 0x82a1c8, 0x7fa0c8, 0x688ebf, 0x366aac, 0x3c6faf, 0x3b6faf, 0x3c6fb0, 0x3c71b2, 0x3e74b5, 0x4078b9, 0x447ebd, 0x4786c2, 0x4b8cc7, 0x4f92cb, 0x5398cf, 0x57a1d2, 0x5ca7d6, 0x5fabda, 0x63b0dd, 0x67b4df, 0x69b8e2, 0x6dbbe4, 0x70bee6, 0x71c1e8, 0x71c3e6, 0x72c6e9, 0x6fc7e8, 0x6cc8e8, 0x69c4e6, 0x63bae3, 0x4d96d2, 0x3d7cc2, 0x748cac, 0xd8d8d7, 0x375785, 0x90a6c6, 0x8ea6c5, 0x8ca4c5, 0x89a3c5, 0x85a1c5, 0x7f9ec5, 0x7798c3, 0x3869a9, 0x396aaa, 0x386aab, 0x3366a9, 0x3163a7, 0x3164a6, 0x3366a8, 0x346aac, 0x376fb1, 0x3b75b7, 0x4280bf, 0x4988c5, 0x4c8fc8, 0x5297ce, 0x569fd3, 0x5ba7d6, 0x63b2dd, 0x6bbde3, 0x6dbfe4, 0x6cc2e5, 0x6dc3e5, 0x6cc4e5, 0x68c2e5, 0x62b8e2, 0x5aabdd, 0x509ad4, 0x3c7fc5, 0x557bab, 0xd2ceca, 0xefefef, 0xadb8ca, 0x4e6e9b, 0x92a8c6, 0x8aa2c4, 0x86a0c4, 0x849ec3, 0x809dc3, 0x85a1c6, 0x4b74ac, 0x3464a4, 0x2f60a1, 0x215192, 0x4e709d, 0x7088aa, 0x8398b3, 0x8ca0ba, 0x8ba0bb, 0x8099b9, 0x698ab5, 0x3567a5, 0x2f6bb0, 0x4684c3, 0x4b8bc8, 0x5095cd, 0x5aa7d7, 0x5faedb, 0x62b3dd, 0x65b7e0, 0x67bae2, 0x68bce3, 0x68bfe3, 0x68c0e3, 0x60b6e1, 0x59a9dc, 0x4284c7, 0x547dae, 0xc4c4c4, 0xebeaea, 0x3c5d8b, 0x889ec0, 0x889fc1, 0x869dc1, 0x829cc0, 0x839dc2, 0x597db0, 0x2b5999, 0x2c5893, 0x506d96, 0xb2b7c0, 0xdddcdd, 0xefeeec, 0xe7e8ea, 0x8ba2c0, 0x4371ab, 0x3b77b9, 0x4787c5, 0x4e92cd, 0x559dd2, 0x59a5d6, 0x5cacda, 0x62b5df, 0x62b8e0, 0x62b7e0, 0x60b5e0, 0x5db0de, 0x56a5d9, 0x4d97d1, 0x3f81c4, 0x4c78af, 0xbec0c4, 0xe8e8e8, 0xacb9cc, 0x5c7aa4, 0x8da3c4, 0x849cbf, 0x8199bf, 0x6a88b5, 0x2a5695, 0x33578a, 0xa8aeb7, 0xeaedf0, 0x7a99bf, 0x3670b4, 0x4786c5, 0x4d92cb, 0x529bd2, 0x56a3d7, 0x5cabdb, 0x5baddc, 0x5aabdb, 0x529dd5, 0x4a91ce, 0x3a79be, 0x5f81ad, 0xcccbcb, 0xecebeb, 0x58749d, 0x7992b9, 0x7a95bb, 0x2f5895, 0x3f5e8a, 0xc2c2c3, 0xe6e7e6, 0x88a1c3, 0x356db1, 0x4483c3, 0x4b8ecb, 0x5097d1, 0x539dd4, 0x54a0d6, 0x539fd6, 0x5199d3, 0x4c93cf, 0x4486c8, 0x3972b6, 0x748eaf, 0xdbd8d3, 0xeeeeee, 0xdce1e8, 0x436392, 0x5274a6, 0x365d98, 0x48648e, 0xc2c3c4, 0xeaeae9, 0x99afcd, 0x2e69af, 0x4382c3, 0x4788c9, 0x498dcb, 0x498fcc, 0x478bca, 0x4586c8, 0x3170b8, 0x537caf, 0xa5b0c0, 0xe6e3e0, 0xe2e7ec, 0x2b5087, 0x2a4e82, 0xbcbec1, 0xe7e7e7, 0x6a8cb9, 0x326db5, 0x3f7cc0, 0x407ec2, 0x407dc3, 0x3c77be, 0x3166aa, 0x8a9cb5, 0xd9d7d5, 0xededed, 0xd5dbe4, 0xcacfd7, 0xf1f0ee, 0xeff1f4, 0x3e6ba9, 0x336bb4, 0x346cb2, 0x4271ad, 0x748eb1, 0xcececf, 0xebeae9, 0xafbfd6, 0x4f75a8, 0x9caabe, 0xdadad8, 0xecebea, 0xb6cafd, 0x84a3fc, 0x6189fb, 0x527cf8, 0x557df8, 0x6c8ef7, 0x94acf7, 0xcfd9f9, 0xe8effe, 0xadc5fe, 0x5587fc, 0x1d5dfb, 0x1e5bfa, 0x1f5af9, 0x1d58f8, 0x1b54f8, 0x1850f6, 0x154cf5, 0x1148f2, 0xa40ef, 0x1547ea, 0x6584ed, 0xbcc8f5, 0x83a9fe, 0x3e7afc, 0x3372fc, 0x316efb, 0x2c69fb, 0x2762fb, 0x245ffa, 0x215bf9, 0x1f58f9, 0x1d55f7, 0x1b53f6, 0x1950f6, 0x184df4, 0x164af1, 0x1446eb, 0x1645e8, 0x2750e4, 0xaab8e9, 0xcbdcfe, 0x558dfd, 0x3a78fe, 0x3571fd, 0x2a66fc, 0x215bfa, 0x1c54f8, 0x1a50f6, 0x194ff5, 0x194ff4, 0x1950f5, 0x184ef4, 0x174af1, 0x1648ec, 0x1443e7, 0x635e1, 0x4e6cdd, 0xe0e3f1, 0xacc7fe, 0x4986fd, 0x3b78fe, 0x2763fd, 0x1c53f8, 0x194df1, 0x1849ec, 0x1648eb, 0x1546eb, 0x1547ec, 0x1548ed, 0x1648ee, 0x184aef, 0x184bf1, 0x184df2, 0x194ef3, 0x174cf2, 0x1548ee, 0x123ee0, 0x123cd9, 0xc4cae4, 0xa1c1ff, 0x4181fe, 0x306cfd, 0x1d54f7, 0x1346ef, 0x1542e1, 0x3a5cd2, 0x6780d7, 0x8b9ddb, 0xa3b1e0, 0xaebae4, 0xaebbe5, 0xa2b2e7, 0x8a9fe7, 0x6885e7, 0x3c63e5, 0x1145ed, 0x1146f1, 0x174bf2, 0x184cf3, 0x1548ef, 0x113cdd, 0x173ed4, 0xc1c7e0, 0xbbd3ff, 0x4a87fe, 0x1a4ef1, 0x1845e2, 0x6075be, 0xecedf2, 0x7892e7, 0x1749ef, 0x174bf1, 0x174cf3, 0x194ff2, 0x1649ef, 0x1341e6, 0x103ada, 0xc33d1, 0xd6d8e2, 0xdee9fe, 0x4885fe, 0x2863fc, 0x1446ec, 0x546cc1, 0xcaccd6, 0x94aaf2, 0x1e50f0, 0x164bf2, 0x1b50f1, 0x123fe3, 0xf37d5, 0x3e58c9, 0x5b92fe, 0x2c67fc, 0x194aec, 0x7786bb, 0x3b66f1, 0x1a4ff1, 0x1d52f0, 0x113bdd, 0x62dd0, 0x969fc4, 0xbed4fe, 0x3471fe, 0x194cec, 0x8792b9, 0x809df5, 0x1c52f0, 0x1d52ef, 0x1342e6, 0xf36d5, 0x1436c5, 0x568cfe, 0x1b52f8, 0x6076c3, 0x7192f4, 0x2057f0, 0x194ced, 0x103bde, 0xc31cd, 0x8f9acd, 0xc7dafe, 0x2463fd, 0x2a52d4, 0xdddddd, 0x7597f5, 0x2459ef, 0xe33d2, 0x465dbf, 0x6b9afd, 0x959bb2, 0xeff3fd, 0x386af0, 0x1c4eeb, 0x1a39bf, 0xe7e7e8, 0x427afc, 0x2b55dd, 0xe1e2e6, 0xc6d4fa, 0x1a52ed, 0x113ee3, 0x52ccc, 0xbdbec3, 0xdfe9fe, 0x2c65fb, 0x526fd1, 0x5d86f1, 0x1545e8, 0x62fd3, 0x828bb3, 0xccdbfe, 0x1b55fa, 0x8291c6, 0xb6c8f8, 0x1f52ea, 0x932d9, 0x5b6baf, 0xafc7fd, 0x144cf7, 0xa5acc4, 0xeaeffd, 0x2b5eeb, 0xb37dd, 0x4559b1, 0x9ab8fd, 0x1148f5, 0xb8bbc6, 0x4573ee, 0xc39e0, 0x3d53b3, 0x8fb0fc, 0x1148f4, 0xbabcc8, 0x87a5f3, 0xb3ae2, 0x3c52b4, 0x90b1fb, 0x1349f3, 0xaab0c9, 0x939e2, 0x455ab1, 0x9bb9fb, 0x164df5, 0x8997cb, 0xe8edfc, 0xd1ddfa, 0x637e1, 0x5667af, 0xb0c8fc, 0x1d55f6, 0x5a75d4, 0xdae2fd, 0x97a4cd, 0xd9e2fb, 0x435e1, 0x727dad, 0xccdbfd, 0x275ff6, 0x2e54db, 0xeff0f4, 0x6589f4, 0x8792b8, 0xd1dcfa, 0x32e0, 0x999daf, 0xdce6fd, 0x3971f7, 0x1142ea, 0xb4b9cf, 0xd6e1fc, 0xd44eb, 0x99a0bb, 0xb7c8f7, 0x431d8, 0xbebebf, 0xecf2fe, 0x4b81f7, 0x2a4ed2, 0x83a6f6, 0x1446e7, 0xa3a9c2, 0x84a1f1, 0x1239cb, 0xd7d7d8, 0x5a8bf6, 0x2c64f4, 0x1140e7, 0x798cd4, 0x83a5f6, 0x1849e5, 0xaeb4ca, 0x3561e8, 0x2644c0, 0x91b2f9, 0x346ef4, 0x194def, 0x143fde, 0xb8bfd9, 0xeef1fe, 0x86a8f5, 0x2254e5, 0xbdc1d0, 0xe0e7fb, 0x485dba, 0xe7eefd, 0x316cf3, 0x2960f3, 0x1343e9, 0xb37d9, 0xa7b3df, 0x2a51e0, 0xafb6d2, 0x89abf5, 0x3165ea, 0x5978e1, 0x6f8aee, 0x6e89ec, 0x6e89ed, 0x708cee, 0x708ced, 0x4a6be6, 0xb31d0, 0x7682bc, 0x648ff5, 0x2d65f2, 0x103ad8, 0xb32d2, 0x2f49b9, 0x8badf5, 0x3c72ee, 0x2659ea, 0x103fe5, 0xe3ce3, 0xf3de3, 0x103ee3, 0x1240e3, 0xd39dd, 0xc33d3, 0x828c2, 0xa7acc4, 0xc1d1fa, 0x2257f0, 0x1342e7, 0xe35d4, 0x304bbd, 0xd6d6d6, 0x89aaf4, 0x3d73ed, 0x2d60eb, 0x1544e6, 0x103de3, 0x113fe3, 0x113ee2, 0x103ce0, 0xd34d5, 0xb2dc5, 0x928bc, 0xd9d9d9, 0x2e5bee, 0xe3be1, 0x2342c0, 0xd0d0d0, 0x83a4f3, 0x2b60ea, 0x1748e6, 0xf3add, 0xe37da, 0xe37d9, 0xe36d9, 0xd33d5, 0xc2fc9, 0x828c0, 0x2e44aa, 0xd6defb, 0x3153d1, 0x799af1, 0x1344e6, 0x733db, 0x92fce, 0xb30cb, 0xc30cb, 0xc31cb, 0xb2fc8, 0x92abf, 0x424bb, 0x6771a3, 0x6c8aef, 0x2247cf, 0xbdbfc8, 0xdedee3, 0xe3e3e7, 0xe4e4e8, 0xeeeeef, 0x9baef1, 0xc9cace, 0xfbcbcb, 0xfab5b6, 0xf7b2b5, 0xf7c3c6, 0xfaeaeb, 0xfddcda, 0xf8716c, 0xf5423f, 0xf43939, 0xf13033, 0xec2932, 0xe5212e, 0xdc1829, 0xd83645, 0xeababf, 0xfde7e6, 0xf98881, 0xf75f56, 0xf75953, 0xf54c4a, 0xf34141, 0xf2393c, 0xf03137, 0xec2933, 0xe42330, 0xda1b2d, 0xcd0e24, 0xc93548, 0xe0b7bc, 0xfdd5d2, 0xf86960, 0xf8655d, 0xf6544f, 0xf4403f, 0xf03537, 0xed2f34, 0xec2b33, 0xec2a34, 0xeb2832, 0xe92633, 0xe42130, 0xd91b2e, 0xc9132b, 0xb9041e, 0xcc8a94, 0xfddddb, 0xf87067, 0xf85751, 0xf13739, 0xe32029, 0xd91624, 0xd51323, 0xd41223, 0xd61426, 0xd91829, 0xdd1d2d, 0xe02031, 0xe32031, 0xe21e30, 0xd8192d, 0xc5112a, 0xb00a22, 0xc38d95, 0xf8685f, 0xf64743, 0xdd363c, 0xc55d65, 0xc79da1, 0xd6c8c9, 0xdcd6d6, 0xdfd0d1, 0xdbb4b7, 0xd68a91, 0xd75561, 0xd83444, 0xda1f31, 0xdf192c, 0xdf1c30, 0xd6172d, 0xbc0e28, 0xa6001b, 0xd3bec1, 0xfa9e98, 0xf64441, 0xc1585b, 0xded5d5, 0xf3d8da, 0xdf7983, 0xdc1227, 0xde192f, 0xd0142c, 0xb30c25, 0xa73c4d, 0xf94f4a, 0xce4a4e, 0xe5e5e5, 0xf6e9ea, 0xe65464, 0xdb142c, 0xc8102b, 0xa40721, 0xd0c7c8, 0xfbaeab, 0xe23436, 0xc2c2c2, 0xef97a1, 0xd8132c, 0xb90723, 0xa2616b, 0xf6625e, 0xc3595c, 0xea6777, 0xcb0825, 0x9f2337, 0xf44644, 0xc88285, 0xda203a, 0xae0824, 0xe9e9e9, 0xfde7e7, 0xf24142, 0xcd8f92, 0xe97383, 0xb90522, 0xfde2e2, 0xf24143, 0xcd7d82, 0xef99a5, 0xbe0523, 0xfde8e8, 0xf2494b, 0xcf464f, 0xee929f, 0xb8102b, 0xf15153, 0xe9232f, 0xc99fa2, 0xe55f73, 0xa93044, 0xf26c6e, 0xee3b43, 0xdc2030, 0xdeb6ba, 0xd20826, 0xa17077, 0xf8bcbe, 0xee434a, 0xea2d3b, 0xd31126, 0xd6929a, 0xe03c54, 0xb80c28, 0xc6c3c3, 0xef575e, 0xec3e48, 0xe62737, 0xd41228, 0xcf3347, 0xdf8792, 0xfceff0, 0xe34e64, 0xc60a29, 0xa34252, 0xf5a7ac, 0xe93845, 0xe93443, 0xe52235, 0xd9182e, 0xd1112a, 0xcd0621, 0xd64155, 0xe8929d, 0xf5ced2, 0xf9e2e5, 0xfae6e8, 0xfbe7e9, 0xfae4e7, 0xf7ced3, 0xea7686, 0xd70d2c, 0xc40927, 0xa20823, 0xc0b9ba, 0xee6f79, 0xe62536, 0xe6293b, 0xe42135, 0xe01930, 0xdc162e, 0xd7122c, 0xd60f29, 0xd70d28, 0xd91530, 0xdb1b35, 0xdd1b35, 0xdc1632, 0xd80b29, 0xce0a28, 0xb80926, 0x9b0520, 0xa78e92, 0xea5e6d, 0xe2192f, 0xe11c33, 0xe11a32, 0xe01831, 0xdd152f, 0xdb142f, 0xda132e, 0xd9122e, 0xd7112d, 0xd30f2d, 0xcc0d2b, 0xbe0a27, 0xaa0521, 0x950922, 0xa4777e, 0xec9aa3, 0xd90e28, 0xd8122c, 0xd6122d, 0xd3112d, 0xd00f2c, 0xce0f2c, 0xc80d2a, 0xc30c29, 0xb90925, 0xad0824, 0x9e011c, 0x8f192d, 0xbeaeb0, 0xf3dcde, 0xda5f70, 0xcb2841, 0xc20b27, 0xbe0522, 0xb90421, 0xb0031f, 0xa9011d, 0x9e0e27, 0x9d2c3f, 0xad7a82, 0xecdfe1, 0xd6b3b8, 0xc8959c, 0xc4999f, 0xccbbbd, 0xe3dbdc, 0xfee8b4, 0xfed980, 0xffcd5a, 0xfec546, 0xfabf46, 0xf5c05a, 0xf5cc84, 0xf6e2c1, 0xffe5a4, 0xfec637, 0xfec433, 0xffc12d, 0xffbe24, 0xffba1d, 0xfdb617, 0xf7ac12, 0xf1a10e, 0xe99308, 0xe3911d, 0xeedcc5, 0xfef7e2, 0xffd76c, 0xfec83d, 0xffc73a, 0xffc32e, 0xffc026, 0xfebc1f, 0xfeb91b, 0xffb818, 0xfeb514, 0xfaad10, 0xf2a10d, 0xe88f08, 0xdf7e02, 0xdea360, 0xffd056, 0xfec941, 0xfec12d, 0xfab51d, 0xf4aa16, 0xf0a212, 0xefa111, 0xf0a210, 0xf2a50f, 0xf7a80f, 0xfaad0f, 0xfaac0e, 0xf4a10b, 0xe78d07, 0xdc7804, 0xd4883e, 0xffd158, 0xffc534, 0xf7ae16, 0xd9931c, 0xcd9645, 0xd2a461, 0xd6a967, 0xd8a65d, 0xd99d42, 0xdf941d, 0xec9400, 0xf29c04, 0xf6a40c, 0xf9a80c, 0xf5a10a, 0xe68806, 0xd96d00, 0xcb8d58, 0xffde8a, 0xfec331, 0xe5a425, 0xbca88c, 0xebeae8, 0xe6c389, 0xeea82c, 0xf4a410, 0xfaa608, 0xf49f08, 0xe48205, 0xd66500, 0xd4b9a3, 0xfffaef, 0xffc530, 0xdba22e, 0xd2d0cc, 0xf8ecd5, 0xf4c05d, 0xfca602, 0xf29906, 0xde7603, 0xc77634, 0xffdb80, 0xeeab1d, 0xf9dda2, 0xfcaa0e, 0xed9004, 0xd06602, 0xd7d3d0, 0xc7a35d, 0xfeebc4, 0xfba507, 0xe57c00, 0xb8997f, 0xfff4d7, 0xfdbc24, 0xcebb9a, 0xfed37b, 0xf39300, 0xba7d44, 0xffecbd, 0xfbb61e, 0xd5cab8, 0xfba30a, 0xc3792b, 0xffe9b2, 0xfbb71d, 0xd7c9b3, 0xfdbc45, 0xc97d25, 0xffe9b3, 0xfebb20, 0xd7bc8b, 0xfec252, 0xc48131, 0xffeec3, 0xfebf28, 0xdfa435, 0xfeb42f, 0xb88951, 0xfff6e0, 0xffc230, 0xfcb010, 0xd6ab64, 0xfa9c00, 0xafa292, 0xffc63e, 0xffbe22, 0xf7a409, 0xe2b067, 0xffbf41, 0xde8409, 0xd4d2d1, 0xfee5a7, 0xffbe23, 0xfeb719, 0xf29e09, 0xe48d13, 0xefdbc0, 0xffd787, 0xf49601, 0xc48442, 0xfec63f, 0xffbd22, 0xfeb515, 0xf6a309, 0xed9000, 0xeb9f2c, 0xf1bd6c, 0xf7ddb4, 0xfcf7ef, 0xffe5b2, 0xffbf43, 0xf59700, 0xdc6f00, 0xc4bbb5, 0xfee7b3, 0xfeb819, 0xfeb818, 0xffb411, 0xfca90a, 0xf6a007, 0xf49b06, 0xf39800, 0xf49a00, 0xf59e07, 0xf9b333, 0xfcbc48, 0xfebe44, 0xffb425, 0xfea800, 0xfda300, 0xee8c01, 0xdc6b00, 0xa88b74, 0xfde1a1, 0xfeb008, 0xfeb10e, 0xffb00c, 0xffad09, 0xfeaa07, 0xfca706, 0xfca405, 0xfba504, 0xfca402, 0xfda501, 0xfda400, 0xfba001, 0xf39401, 0xe47b01, 0xda6300, 0xb37e57, 0xfcdb99, 0xfdad11, 0xfda804, 0xfba606, 0xfba505, 0xfaa304, 0xfaa204, 0xf99f03, 0xf79c03, 0xf49602, 0xee8c02, 0xe57d01, 0xda6900, 0xcd5b05, 0xb0876a, 0xfcf2de, 0xf1b959, 0xf49800, 0xf19400, 0xee8e02, 0xec8c03, 0xe98502, 0xe57e02, 0xdf7401, 0xdc6900, 0xd35e00, 0xb56e3a, 0xcfc3bb, 0xf2ede6, 0xe7b976, 0xe59a36, 0xe18a25, 0xdc8120, 0xd77b23, 0xd37c31, 0xc79266, 0xcdc6c1, 0xb4c8fb, 0x4775f4, 0x2f5ff3, 0x2d59ee, 0x466ae9, 0xc2cbef, 0xeff4fe, 0x6a96f8, 0x2b66f5, 0x2a62f4, 0x1e53f2, 0x1547ef, 0x1241e6, 0x835dd, 0x7a8edc, 0x9ab6fd, 0x628bfc, 0x5a83fa, 0x829ff8, 0xdde4f8, 0x6192f8, 0x3e77f5, 0x2b63f4, 0x1d52f2, 0x184df1, 0x1649f1, 0x1445ec, 0x123fe2, 0xc35d7, 0x6478ce, 0xe2ebfe, 0x7da5fd, 0x2a6afb, 0x2664fa, 0x215dfb, 0x1a54fa, 0x144cf5, 0x93ff0, 0x496ee8, 0xcbd3f0, 0x84abfa, 0x3771f6, 0x2055f1, 0xc3eea, 0xf3de1, 0xe3de3, 0x1446ee, 0x1443e9, 0x113bdc, 0x1237ce, 0xc6cadf, 0xc7d9fe, 0x4884fc, 0x407cfc, 0x3470fc, 0x245efc, 0x1f59fc, 0x1a4ef5, 0x1748eb, 0x113fe5, 0xa6b2de, 0xd5e2fd, 0x4078f6, 0x1e45d7, 0x8f98bc, 0xd8d9dd, 0xe3e3e6, 0xa8b5e5, 0x2553eb, 0x1547ee, 0x1240e5, 0xe35d5, 0x586abb, 0xe0eafe, 0x4b87fc, 0x1e59fa, 0x1249f5, 0x154cf6, 0x1b52f7, 0x1644e7, 0x1a44da, 0xd4d7e4, 0x8fb0fa, 0x1f55f2, 0x3c5bca, 0xdadada, 0x6487f2, 0x1346ec, 0x103cde, 0xf31c4, 0x4882fc, 0x2761fa, 0x2251eb, 0x5d77cc, 0x8596d0, 0x8698d7, 0x6480dc, 0x2b58eb, 0x194ff3, 0x1a4ff6, 0x1749ed, 0x113de2, 0x4a63c4, 0x4477f7, 0x1645e6, 0xc6c6ca, 0x4572f1, 0x42dd2, 0xa9adc1, 0xa6c2fd, 0x235efb, 0x7085c9, 0xdce2f5, 0x93aaf2, 0x285bf4, 0x164cf4, 0x1645e9, 0xd2d2d4, 0xecf1fe, 0x124cf4, 0x6777b2, 0xacc1f8, 0x174aea, 0x933d9, 0x7784bb, 0x5687fe, 0x4969cc, 0x436ff6, 0x164af2, 0x949ec8, 0xb0c6fb, 0x1145e6, 0xc1c1c1, 0x2157ec, 0xc38df, 0x5c6dbc, 0x1e59f7, 0xb4b4b6, 0x4e7af8, 0x1347f0, 0x7a8bc9, 0x7a9ef8, 0x274ed2, 0x688ef2, 0xd3ce2, 0x5166bd, 0xccdcfd, 0x1f54e6, 0xdcdcdc, 0xd6e2fd, 0x2760f9, 0x798dce, 0xeff2fb, 0x4974f5, 0x3e5cca, 0x99b3f6, 0xd3de4, 0x5166bc, 0xa7c3fd, 0x1750f1, 0xd3d3d3, 0x5086f9, 0x3d6eed, 0x2c5bf2, 0x2858ef, 0x416cf3, 0xc8d2f0, 0x2350eb, 0x5269c4, 0xb1c4f8, 0xb3be4, 0x5d6fbb, 0x97b8fc, 0x1d59f9, 0x6d83cd, 0x5a8ff7, 0x3c75f7, 0x2157f5, 0x1344e8, 0x123ddf, 0x6074c4, 0xb3c6f8, 0x939e3, 0x7783b7, 0x96b9fb, 0x2f6bf9, 0x1a4ced, 0xb4bee2, 0xe0eafd, 0x4c84f7, 0x346cf6, 0x1f56f4, 0x1a4ff3, 0x1343e8, 0x113bdb, 0x6174c4, 0x9db5f6, 0x332e0, 0xa4a7b6, 0x97b9fb, 0x3e79f8, 0x1c52f5, 0x1241e4, 0xa0b0e6, 0x81a7fa, 0x2860f5, 0x144af2, 0xf42ee, 0x1449f1, 0x1a4ff2, 0x1546ed, 0x123dde, 0x2042cc, 0xe1e2e9, 0x668af0, 0xe35cf, 0x95b7fb, 0x417df8, 0x2a63f7, 0x1649ee, 0x2954e9, 0x8ca3ee, 0x6f95f8, 0x1b53f3, 0x1e4adb, 0x969fbe, 0xc6cce1, 0x436bee, 0x1b50f2, 0x1b50f0, 0xf39da, 0x2e4ccd, 0x1548e7, 0x465bb3, 0x93b5fa, 0x3a75f7, 0x2760f8, 0x164af0, 0xe42ee, 0x93fed, 0x3561f0, 0x5c81f5, 0x688bf7, 0x567df6, 0x1c50f1, 0x1042eb, 0x264bd2, 0xc6c6c8, 0x3c6bf2, 0x2157f1, 0x1a4ef0, 0x123fe4, 0xe37d8, 0x6a7fd2, 0x8fa9f4, 0xe3adc, 0x9da3bf, 0x8fb1fa, 0x2a63f4, 0x5875cd, 0x1246f2, 0x1a50f5, 0x184df3, 0x174af2, 0x1549f0, 0x1546ea, 0x133fe1, 0x1039d4, 0xb1b3ba, 0x265bf2, 0x2358f1, 0x184aed, 0x113ee1, 0xc36d8, 0x6e83d3, 0xd9e1fb, 0x1745e4, 0x2c4ac6, 0x89abf9, 0x134cf2, 0xcbcbcb, 0x7d99f5, 0xc41ec, 0x1549f2, 0x174af0, 0x1444e8, 0x1340e3, 0xe39dc, 0x1b3dca, 0xa5a9bd, 0xc1d0fa, 0x1d53ef, 0x1e52ef, 0x1547eb, 0xa37dd, 0x4e6ddf, 0xb0bef2, 0xcad4f8, 0xbbc9f8, 0x7b96f2, 0x1135cb, 0xb2b3bc, 0x81a3f8, 0xa3fec, 0xc7c7c7, 0xcdd6f5, 0x2855ea, 0x1443e8, 0x123ee2, 0xf38d7, 0x3f57ba, 0xb2c4f8, 0x1147ed, 0x1649ec, 0x1242e9, 0x103ce1, 0xf39dc, 0x1034cf, 0x949ab7, 0x7898f7, 0x2d52cd, 0xccd4f0, 0xa7b5e7, 0x9ba9e0, 0xa7b2dd, 0xced1de, 0xb3c3f7, 0x1b49e8, 0xb3be6, 0x103cdd, 0xd36d9, 0x72ed4, 0x2743bc, 0xa3a9c4, 0x7494f5, 0x919dc6, 0x788fe2, 0x1e46dc, 0x153dd9, 0x1439d4, 0x2e4bc4, 0x868fb9, 0xebebeb, 0xbbcaf8, 0xb7e5b7, 0xc2d2c2, 0x3cbe41, 0xb9c7b9, 0xb9ecbd, 0x28bb31, 0xa6c3a7, 0xe7f7e7, 0xe4f5e5, 0xe3f5e4, 0xe3f4e4, 0xe2f4e3, 0xe2f4e4, 0xe2f3e4, 0xe3f4e5, 0xc9e9cd, 0x14811f, 0xced0ce, 0x92e29a, 0x38c945, 0x16ac20, 0x16ad20, 0x16b422, 0x15b421, 0x14b220, 0x13b220, 0x12b020, 0x11af1f, 0xfaf1f, 0xead1f, 0xcad1d, 0xcac1e, 0xaa91b, 0x9a81b, 0x8a51a, 0x7a51a, 0x6a319, 0x6a219, 0x6a019, 0x69f19, 0x69e19, 0x7a11c, 0x9012, 0x25d09, 0xcbcdcb, 0x8ee198, 0x3bcb4c, 0x17ba26, 0x10b61e, 0x11b620, 0xfb41f, 0xeb41f, 0xdb31e, 0xdb21f, 0xbb21d, 0xab11c, 0x8af1b, 0x7ae1a, 0x6ac19, 0x5aa19, 0x4aa18, 0x3a918, 0x2a716, 0x1a616, 0x1a516, 0x1a416, 0x1a316, 0x1a216, 0x1a117, 0x1a017, 0x29f17, 0x17c0e, 0x25307, 0x8be097, 0x32c746, 0x10b01e, 0xaa516, 0xaa517, 0x9a516, 0x8a315, 0x8a416, 0x7a315, 0x6a315, 0x5a014, 0x49f13, 0x39e13, 0x29b12, 0x29c13, 0x19a11, 0x9812, 0x9712, 0x9612, 0x9412, 0x9413, 0x9713, 0x750d, 0x25207, 0x84dd91, 0x13b425, 0x8109, 0x7908, 0x7d09, 0x7e09, 0x7e0a, 0x7c0a, 0x7b0a, 0x7a0b, 0x790b, 0x770c, 0x760b, 0x750b, 0x740b, 0x730b, 0x720c, 0x710c, 0x740c, 0x850f, 0x790d, 0x35409, 0x71d57d, 0xe8a17, 0x88a289, 0xc8cfc8, 0xcfd7cf, 0xcfd6cf, 0xc8d6c9, 0x2f9f3d, 0x5f0a, 0x76cb7e, 0xb8beb8, 0xd4f0d9, 0x740e, 0x7610, 0x418d4b, 0xfeeae9, 0xfba7a3, 0xf97874, 0xf75551, 0xf43737, 0xf0282b, 0xec2931, 0xe63540, 0xe3515d, 0xe67d86, 0xf1ccd0, 0xfbb9b5, 0xf7645b, 0xf76158, 0xf85852, 0xf64d49, 0xf54342, 0xf23a3b, 0xf13236, 0xed2b34, 0xe52431, 0xda1d2e, 0xce1227, 0xcd4656, 0xf4e8e9, 0xfa948d, 0xf7655c, 0xf85650, 0xf64844, 0xf43e3c, 0xf23637, 0xf13437, 0xef3035, 0xef2e35, 0xee2c35, 0xed2832, 0xe62432, 0xda1c2f, 0xca1128, 0xbd172e, 0xd5959e, 0xf98c85, 0xf85c54, 0xf23f3c, 0xe33237, 0xdd353d, 0xdd3741, 0xde3741, 0xe0353f, 0xdb2835, 0xde2331, 0xe2212f, 0xe72431, 0xeb2633, 0xe72232, 0xda1a2e, 0xc5122a, 0xb20721, 0xc999a0, 0xfbb4b0, 0xf8534d, 0xde383b, 0xc08a8c, 0xe4d2d3, 0xf1eeee, 0xf1cdcf, 0xd29297, 0xeccacd, 0xde868e, 0xdc2333, 0xe51b2b, 0xe92332, 0xe62032, 0xd8182d, 0xbb0e28, 0xa70721, 0xcea9ae, 0xf95e58, 0xdf3f41, 0xc8c3c3, 0xf16e75, 0xbfa5a7, 0xe98a92, 0xe72b3d, 0xe72133, 0xe42034, 0xcf132b, 0xaf0b24, 0xa1293d, 0xfbb0ac, 0xe83837, 0xbcb6b6, 0xed333e, 0xbcb8b8, 0xe84e5c, 0xe62537, 0xdf1b32, 0xbf0e28, 0x9e011a, 0xb89ca0, 0xf76059, 0xc45e5f, 0xfabfc0, 0xdd1a28, 0xea4c5a, 0xe42136, 0xd2122c, 0xa90620, 0x963545, 0xfeeceb, 0xf54c48, 0xca8a8c, 0xf04248, 0xb54f57, 0xe53648, 0xde1932, 0xb70b25, 0x960720, 0xfddad9, 0xf44544, 0xcf9093, 0xfabebf, 0xe52430, 0xc1a2a4, 0xf5b5bb, 0xe12239, 0xc50d28, 0x98021c, 0xd5d4d4, 0xfcd6d5, 0xf34949, 0xcd686d, 0xf3666c, 0xd32d3c, 0xe33246, 0xcd0f2b, 0x9c021c, 0xd0cbcb, 0xfcdede, 0xf35252, 0xe02e37, 0xddd3d3, 0xe82432, 0xb26d75, 0xe95e6e, 0xd10f2c, 0x9f011b, 0xd1d1d1, 0xf35757, 0xf13b40, 0xde303c, 0xeee4e4, 0xf17b83, 0xc71428, 0xcdcdcd, 0xf0949e, 0xd00a27, 0x9f0721, 0xf47b7c, 0xf0494d, 0xee333c, 0xe32f3c, 0xe87882, 0xe9838d, 0xcd1025, 0xa4525d, 0xf19fa9, 0xcd0524, 0x992f41, 0xfce8e8, 0xee4147, 0xee4249, 0xec2f3b, 0xdb1b2e, 0xc21229, 0xaa1027, 0xbfa5a8, 0xed8693, 0xc60020, 0xa18185, 0xf48c91, 0xeb313d, 0xe92837, 0xd1172c, 0xaf0c24, 0x9f1f34, 0xe14158, 0xb41d35, 0xed6670, 0xde1b2f, 0xa8041e, 0xa07279, 0xfcedef, 0xd51835, 0xb78088, 0xeeb7bd, 0xc43649, 0x9e0a21, 0xd4d4d4, 0xf1afb9, 0xb47a82, 0xe7e5e5, 0xe7b9bf, 0xf0efef, 0xefefee, 0xefeeee, 0xdedfe0, 0xc9cbce, 0xb1b8c0, 0xa1aab5, 0x99a5b1, 0x98a4b0, 0x9aa7b2, 0xa2adb6, 0xb3b9c0, 0xcbcccd, 0xd7d8d8, 0xdfdfdf, 0xccced1, 0x65768f, 0x27446b, 0xf3360, 0x5305f, 0x33161, 0x33365, 0x33768, 0x43b6d, 0x53d70, 0x54174, 0x74678, 0xc497d, 0x1d5987, 0x3a6a91, 0x95a3b0, 0xd1cdcb, 0xdededd, 0x9aa2b1, 0x263d63, 0x1a4b, 0x2352, 0x32859, 0x62d5d, 0x63061, 0x43466, 0x63769, 0x63b6d, 0x73f71, 0x84175, 0x84578, 0x8487c, 0xa4b7f, 0x94e82, 0xa5086, 0x34e87, 0xd538a, 0x5d83a1, 0xb1b7bd, 0xdcdad8, 0xb4b8c0, 0x41a48, 0x1a4a, 0x62250, 0x52553, 0x42657, 0x4285b, 0x62d5f, 0x43162, 0x63567, 0x6386b, 0x73c6f, 0x83f73, 0x84276, 0x9467b, 0x9497e, 0x94c82, 0x94e85, 0xb5187, 0xb548a, 0xb568d, 0xb5791, 0x55691, 0x4c7899, 0xc2c3c5, 0xdcdbdb, 0xe5e6e7, 0x25365b, 0x1443, 0xd2350, 0xd2653, 0xa2655, 0x82757, 0x52859, 0x42a5c, 0x62f61, 0x63265, 0x63669, 0x73a6d, 0x73d71, 0x94478, 0xa487c, 0x94b80, 0xb4d83, 0xa5187, 0xb528a, 0xb558d, 0xb5690, 0xb5993, 0xb5a96, 0xb5b97, 0x12609a, 0x708ea6, 0xcecdcd, 0xa4a7b4, 0xe1d48, 0xc1e4a, 0x172a55, 0x142956, 0x112a58, 0xd2a59, 0xb2a5b, 0x92c5d, 0x72d5f, 0x63063, 0x73467, 0x6376b, 0x73a6f, 0x73e73, 0x84178, 0x9447b, 0xa497e, 0x94b82, 0xa4d85, 0xa5189, 0xc548c, 0xc578f, 0xd5991, 0xc5a93, 0xc5c97, 0xd5e9a, 0xc609c, 0xa5d9d, 0x497ba3, 0xc3c3c3, 0xdedfdf, 0x989caa, 0x735, 0x16244f, 0x1f2f58, 0x1a2e59, 0x182d59, 0x142d5b, 0xf2c5c, 0xd2d5d, 0xb2f5f, 0x82d62, 0x63065, 0x73368, 0x6376d, 0x73a70, 0x84177, 0x9437a, 0xa487f, 0xb4d85, 0xa5188, 0xb538b, 0xb548d, 0xb568e, 0xb5790, 0xb5b94, 0xd5f9b, 0xd639f, 0xe66a3, 0xd62a2, 0x32709f, 0xb7b9bb, 0x8d91a1, 0xb38, 0x273259, 0x28355d, 0x21335c, 0x1f315c, 0x1b305d, 0x16305f, 0x132f5e, 0xf2f60, 0xd3062, 0x92f63, 0x73468, 0x6386d, 0x73b70, 0x73f74, 0x84378, 0x9457b, 0x9487e, 0xa4b80, 0xa4d83, 0xa4e83, 0xa4e82, 0xb4f82, 0xa4f81, 0x85083, 0x185e93, 0xd5f98, 0xe65a2, 0x106aa7, 0xe6baa, 0xe65a6, 0x206ba6, 0xbcbab9, 0x9193a4, 0x230, 0x2f385f, 0x303c61, 0x2b3961, 0x263660, 0x233660, 0x1e3460, 0x193361, 0x153262, 0x123163, 0x103164, 0x62e63, 0x63166, 0x7346a, 0x6386e, 0x94075, 0x94276, 0x84478, 0x94577, 0x74476, 0x54270, 0x124b77, 0x275889, 0x386298, 0x375b9a, 0x2e679d, 0xd5d94, 0xe67a3, 0xf6dab, 0xf70af, 0x1071b1, 0xd68ab, 0x246da7, 0xbabbbc, 0xcacbd1, 0x12e, 0x2e365b, 0x394165, 0x343f65, 0x2f3d64, 0x293a63, 0x243863, 0x213663, 0x1c3664, 0x173364, 0x143465, 0x103465, 0x52d62, 0x73165, 0x63c6d, 0x73a68, 0xc406d, 0x144776, 0x265584, 0x3c669e, 0x355ea1, 0x264f96, 0x214991, 0x254d93, 0x185a90, 0xc6095, 0xe6aa6, 0xf70ae, 0x1173b2, 0x1175b4, 0x1278b7, 0xe69ac, 0x4579a4, 0xc7c4c2, 0xe8e9ea, 0xd123c, 0x2b3258, 0x41496b, 0x3d476a, 0x374368, 0x324068, 0x2c3d67, 0x283b66, 0x233865, 0x1f3767, 0x1a3665, 0x163566, 0x113464, 0x52b5e, 0x72e5f, 0x63161, 0x63364, 0x73667, 0x63765, 0x194877, 0x3b6da1, 0x396ca8, 0x2e63a0, 0x2c5f9e, 0x2b5c9c, 0x28599b, 0x275699, 0x255097, 0x255999, 0xb5083, 0xd629a, 0xf6eab, 0x1073b0, 0x1077b5, 0x1277b8, 0x117bbb, 0x117dbd, 0xc68af, 0x6189a9, 0xcdcdcc, 0x424563, 0x1a1f47, 0x4e5473, 0x464f70, 0x414a6e, 0x3c476c, 0x36446b, 0x314069, 0x2c3e69, 0x273b68, 0x223a66, 0x1c3863, 0x193662, 0xf305d, 0x2556, 0x2659, 0x443549, 0x9e3a29, 0x533c46, 0x83868, 0x3871ac, 0x3271a8, 0x316fa7, 0x316ca5, 0x316aa4, 0x2e65a2, 0x2c61a0, 0x2b5d9b, 0x29589a, 0x1f5d98, 0xc5686, 0xd67a0, 0x1072ae, 0x1177b5, 0x107ab8, 0x127dbb, 0x117fbf, 0x1181c1, 0xd65ab, 0xb3afac, 0xbfc0c9, 0x2a, 0x525674, 0x505575, 0x4a5272, 0x444e71, 0x3e4a6f, 0x39476d, 0x33436c, 0x2e4068, 0x283d65, 0x1e3962, 0x153561, 0x3a3b56, 0x663439, 0x913123, 0xd2380f, 0xe13504, 0xdf3c04, 0x242e4a, 0x1e4d7d, 0x387fae, 0x367dae, 0x377bad, 0x3678ac, 0x3475aa, 0x3270a7, 0x306ba4, 0x2e65a1, 0x2c5f9c, 0x1a5b95, 0xc5b8b, 0xd6ba4, 0x1075b1, 0x107ab7, 0x127fbe, 0x1282c1, 0x1384c4, 0x1289c7, 0x1074b8, 0x2a71aa, 0x323356, 0x2c2f55, 0x5b5f7c, 0x545978, 0x4d5576, 0x475174, 0x424e71, 0x3c4970, 0x35456b, 0x334165, 0x48415a, 0x7c4549, 0xcc482d, 0xde421e, 0xd12b03, 0xd63505, 0xd73d08, 0xda4308, 0xdb4a0e, 0x2448, 0x3a75a7, 0x468ab6, 0x4589b5, 0x4187b4, 0x3d84b2, 0x3981af, 0x367cad, 0x3576aa, 0x3470a7, 0x3068a3, 0x1a5b94, 0xc5e90, 0xe6fa7, 0x1178b4, 0x117bba, 0x1180be, 0x1382c1, 0x1285c4, 0x1288c7, 0x1289c9, 0x1286c6, 0x1168b0, 0xa1aab1, 0xd5d5d5, 0xccccd1, 0x676a85, 0x5e627e, 0x585d7c, 0x51597b, 0x4a5477, 0x455074, 0x3b4b70, 0x904954, 0xca4438, 0xcd3b2e, 0xd13e28, 0xd44324, 0xd84720, 0xd93c06, 0xdd480b, 0xe0530b, 0xe45d0c, 0x963b24, 0x93056, 0x5391bf, 0x5996be, 0x5796be, 0x5494bd, 0x5090bb, 0x498cb8, 0x3880b0, 0x3577ad, 0x3372a8, 0x1e6099, 0xb5f8f, 0xe71a9, 0x117bb6, 0x117fbc, 0x1183c0, 0x1287c4, 0x138ac8, 0x138bc9, 0x138dcc, 0x1391ce, 0x117bbf, 0x2a6faa, 0xc8c4c0, 0x3e3f5f, 0x2d2e53, 0x696c87, 0x626582, 0x5c6180, 0x555c7c, 0x4f5779, 0x485276, 0x484f6e, 0xc9433c, 0xce4135, 0xd24430, 0xd54a2b, 0xda5028, 0xde5520, 0xdf510a, 0xe15e0c, 0xe16b0c, 0xec740d, 0x512d37, 0x19436a, 0x6ba4c9, 0x6da4c5, 0x6ba3c4, 0x68a0c3, 0x619dc1, 0x5997bf, 0x5192bb, 0x3a82b1, 0x367aac, 0x22659f, 0xe5f8e, 0xf71a8, 0x107cb8, 0x1182bf, 0x1186c3, 0x1389c6, 0x138cca, 0x148fcc, 0x1490ce, 0x1492d0, 0x1390cd, 0xb6ab4, 0x9fa7ae, 0xefeff0, 0x60731, 0x646580, 0x6c6e89, 0x666985, 0x5e6482, 0x585f7f, 0x515a7c, 0x4b5576, 0x625267, 0xd1473e, 0xd24938, 0xd64e34, 0xdb5630, 0xe05d2c, 0xe26522, 0xe1650b, 0xe3730e, 0xe47f0d, 0xf1810e, 0x282641, 0x214f75, 0x81b4d1, 0x80b1ce, 0x7fafcd, 0x7badcb, 0x74a9c8, 0x6ba3c5, 0x609cc0, 0x5594bc, 0x488cb7, 0x2e73aa, 0xf5a8b, 0xe70a5, 0x117db8, 0x1384c0, 0x138cc9, 0x1490cc, 0x1392cf, 0x1394d0, 0x1595d2, 0x1497d3, 0x106fb7, 0x678dac, 0xc3c3ca, 0x70733, 0x7c7d94, 0x70728c, 0x686c88, 0x626785, 0x5b6282, 0x555c7e, 0x495677, 0x8d575f, 0xd24d41, 0xd6503a, 0xda5737, 0xe06032, 0xe46b2e, 0xe57222, 0xe3770d, 0xe5860d, 0xe6910f, 0xf28e0f, 0x232340, 0x245275, 0x96c4dc, 0x95c0d8, 0x93bed7, 0x8fbbd3, 0x88b5d1, 0x7cafcc, 0x71a7c7, 0x649fc2, 0x5695bc, 0x468ab7, 0x3a80b1, 0x165d98, 0xe6c9e, 0x117db6, 0x1286c2, 0x128bc7, 0x1393ce, 0x1496d1, 0x1599d5, 0x149bd6, 0x1386c7, 0x2d71ab, 0xc6c3c0, 0x62617a, 0x37385b, 0x7d7f95, 0x72748f, 0x6a6f8b, 0x646987, 0x5d6484, 0x555d7f, 0x47587a, 0xb55953, 0xd45343, 0xd8583e, 0xdd6039, 0xe36a36, 0xe57831, 0xe58020, 0xe5870d, 0xe7950f, 0xe9a110, 0xf49c0e, 0x3b293d, 0x143f63, 0xa8d6e8, 0xabcedf, 0xaaccde, 0xa4cadd, 0x9ac3d8, 0x8fbad3, 0x7fb0cd, 0x71a6c7, 0x619cc1, 0x5191bb, 0x4087b3, 0x3076ab, 0x10679c, 0x107cb4, 0x1288c2, 0x138dc9, 0x1391cd, 0x1495d1, 0x1498d3, 0x159ad6, 0x159cd6, 0x159dd8, 0xf69b2, 0xb0aead, 0x5052f, 0x6d6d87, 0x757790, 0x6e718c, 0x666b89, 0x5f6686, 0x586081, 0x485b7b, 0xc8584f, 0xd75845, 0xdb5f40, 0xe1673c, 0xe57438, 0xe68333, 0xe7891e, 0xe6930f, 0xeaa211, 0xebae11, 0xf0b411, 0x853228, 0x1f48, 0xa3cedf, 0xb7d6e4, 0xb7d7e4, 0xb2d4e3, 0xabcfe0, 0x9dc5da, 0x8ebad3, 0x7dafcc, 0x5b99c0, 0x5291bb, 0x4382ad, 0x256e9e, 0xe7aaf, 0x1286bf, 0x138ec9, 0x1497d2, 0x159bd6, 0x149dd7, 0x159fda, 0x169fda, 0x15a3dc, 0xa6db8, 0x919da8, 0xe8e8ea, 0x28, 0x7b7c93, 0x7d7e95, 0x777992, 0x6e738e, 0x686d8a, 0x616887, 0x5a6283, 0x4a5c7c, 0xcd5b4f, 0xda5d46, 0xde6341, 0xe36d3f, 0xe67b39, 0xe88b35, 0xe7911d, 0xe89c11, 0xeaab11, 0xecb811, 0xedc714, 0xe0630d, 0x22750, 0x597f98, 0xc3dee8, 0xc0dde7, 0xbcd9e6, 0xb6d5e4, 0xacd0e1, 0x9bc4da, 0x8ab7d2, 0x6e9dbc, 0x43789c, 0x165881, 0x65984, 0x86495, 0x1b779e, 0x1080b7, 0x128dc5, 0x1494ce, 0x1599d4, 0x139dd7, 0x159fd9, 0x16a2dc, 0x16a6de, 0xe78c0, 0x6083a5, 0xcecece, 0xd1d1d7, 0x808198, 0x7f8097, 0x787b93, 0x71748f, 0x6a6e8b, 0x626988, 0x5b6483, 0x4a5d7d, 0xc45e54, 0xda5f48, 0xde6642, 0xe5723f, 0xe7803a, 0xe89036, 0xe9961d, 0xe8a310, 0xecb112, 0xecbf14, 0xedcb14, 0xf1c112, 0x3c2e44, 0xc355c, 0xd2edf3, 0xcce4ed, 0xcde7f1, 0xadccdd, 0x6a92ad, 0x2f6385, 0x104c76, 0x437a, 0x12516c, 0x697f5b, 0xbdae46, 0xebc131, 0xeda30d, 0x227699, 0x1187bd, 0x1494cd, 0x149ad5, 0x149ed8, 0x15a1da, 0x16a3dd, 0x15a4de, 0x15a7df, 0x1281c6, 0x427aab, 0xc8c8c8, 0xc1c1ca, 0x2032d, 0x84859b, 0x797b95, 0x717590, 0x6a6f8c, 0x636a88, 0x5c6585, 0x4f5d7d, 0xa16161, 0xda6248, 0xdf6943, 0xe57440, 0xe8843b, 0xe89437, 0xe9991c, 0xe9a711, 0xebb512, 0xedc313, 0xedce13, 0xf0da13, 0xe57214, 0x2e5e, 0x2f587c, 0x6c92ac, 0x235279, 0x2d5f, 0x63b5a, 0x3b5e59, 0x74845c, 0xccb84a, 0xffdc49, 0xffdc39, 0xfbd31b, 0xf9c211, 0xf9b20d, 0xae8826, 0x1180b3, 0x1391c9, 0x149bd5, 0x169fd9, 0x15a5de, 0x16a7df, 0x16a8e0, 0x1489ca, 0x2f75b0, 0xc5c5c5, 0xb9b9c4, 0x40530, 0x87889d, 0x818298, 0x7a7c95, 0x737591, 0x6b708d, 0x636b89, 0x5c6586, 0x555f7e, 0x6c5c6f, 0xdb6248, 0xe57541, 0xe7843b, 0xe99437, 0xe9991b, 0xeaa710, 0xedb412, 0xe9be15, 0xe3b91d, 0xc78930, 0x40434f, 0x1325f, 0x53764, 0x63965, 0x32555e, 0xae9b3f, 0xffde67, 0xfae88e, 0xf7e177, 0xf6db5f, 0xf8d949, 0xf9d634, 0xfbd21f, 0xfac313, 0xf8b00d, 0xea9e0b, 0x1478a5, 0x138dc3, 0x149ad3, 0x16a3dc, 0x15a6df, 0x16a9e0, 0x16a9e1, 0x148dcc, 0x317cb9, 0x818299, 0x737592, 0x5c6686, 0x556080, 0x505a78, 0xd35d4a, 0xdf6844, 0xe47340, 0xe7813b, 0xea9236, 0xf49920, 0xe28928, 0x5d493c, 0x172c45, 0xb274a, 0x214f, 0x52c51, 0x4f7348, 0x143f4b, 0x3262, 0xeede94, 0xf9ed9c, 0xf4e796, 0xf3e389, 0xf6e073, 0xf6db5c, 0xf7d947, 0xf9d633, 0xfad21e, 0xfac312, 0xf7b00e, 0xf8a104, 0x6f7857, 0xd89c1, 0x1498d1, 0x16a1da, 0x17a9e0, 0x15a9e1, 0x148dcd, 0x85859c, 0x737491, 0x6b6f8c, 0x556081, 0x4d5a7b, 0x635b70, 0xe86a44, 0xeb7c4e, 0xa86e55, 0x6c5a5a, 0x272f4c, 0x1143, 0x1945, 0x304e47, 0x718f57, 0xa0bc67, 0xc6df72, 0xd5ed83, 0x8baf50, 0x6345b, 0x868f73, 0xfaeb95, 0xf4e692, 0xf4e282, 0xf5df6e, 0xf7db57, 0xf8d844, 0xf9d52f, 0xfbd11a, 0xf9bf13, 0xf7ad0d, 0xf79d08, 0xbf8c18, 0xd83ba, 0x1396ce, 0x148aca, 0x7f8197, 0x797b94, 0x717490, 0x626989, 0x5b6485, 0x545f81, 0x4e5a7d, 0x475477, 0x585871, 0x31476c, 0x2a3f62, 0x3a4d60, 0x47604f, 0x7a974d, 0xb1d157, 0xc1e165, 0xbedc6b, 0xc2dd6f, 0xc5e076, 0xc7e278, 0xc4df77, 0x1f4a4b, 0x13260, 0xf9e27d, 0xf3e489, 0xf6e077, 0xf6de64, 0xf8d94f, 0xf9d73c, 0xfad329, 0xfbce16, 0xf8ba10, 0xf7a90c, 0xf69806, 0xdca10d, 0x127eb1, 0x1394cb, 0x149ed7, 0x15a1db, 0x16a4dd, 0x15a5dd, 0x16a6e0, 0x7e7e96, 0x70738e, 0x626887, 0x5a6384, 0x535e81, 0x4c5a7e, 0x455479, 0x3e4d72, 0x6d836e, 0xa2c262, 0xa5c956, 0x9bc442, 0x9fc842, 0xa8cd4d, 0xb1d258, 0xb7d762, 0xbcda68, 0xbfdd6e, 0xc2df71, 0xc4e173, 0x7aa140, 0x2d5c, 0x979968, 0xf6e179, 0xf5de6a, 0xf6db59, 0xf9d845, 0xf9d534, 0xfbd320, 0xfac815, 0xf8b40e, 0xf7a40a, 0xf49304, 0xe09e0b, 0x147ead, 0x1392ca, 0x149cd7, 0x15a3dd, 0x6d6e86, 0x7c7d95, 0x6d718c, 0x676c89, 0x606686, 0x596183, 0x515d7f, 0x4c597e, 0x44547a, 0x3f4e74, 0x4e6667, 0x8db942, 0x96be42, 0x96c03b, 0x98c23a, 0xa2c845, 0xaace4f, 0xb0d258, 0xb4d65f, 0xb8d864, 0xbad966, 0xbbd968, 0xc1e069, 0xd3c52, 0x486160, 0xf7df67, 0xf7dc5a, 0xf8d94b, 0xf8d739, 0xfbd018, 0xf9bf12, 0xf59d09, 0xf48f03, 0xd89809, 0x137cae, 0x1391c8, 0x159ad5, 0x159ed8, 0x16a0da, 0x61617a, 0x38395b, 0x7e7f96, 0x72758e, 0x6b6f8a, 0x656a87, 0x5e6584, 0x565f81, 0x505b7f, 0x4a577c, 0x435379, 0x3d4e74, 0x31416c, 0x6a8c53, 0x8db93c, 0x90bb35, 0x90bc2f, 0x9ac23a, 0xa7cc4d, 0xadd054, 0xb2d45b, 0xb3d55d, 0xb9d95f, 0x2a5556, 0x294d5d, 0xf8d950, 0xf8d849, 0xf8d73b, 0xfad42c, 0xfbd11c, 0xfac614, 0xf8b50e, 0xf6a50b, 0xf49606, 0xf48c02, 0xc28817, 0xe7db4, 0x138fc8, 0x1598d3, 0x159cd8, 0x159dd9, 0xf68b2, 0x696d89, 0x636786, 0x5c6382, 0x545d80, 0x4d597d, 0x48557a, 0x405077, 0x3b4c74, 0x34476d, 0x3b5162, 0x83af3d, 0x88b72d, 0x88b625, 0x90bc30, 0x99c13a, 0x9ec641, 0xa3ca47, 0xa6cc4b, 0xaacd4e, 0xabd04d, 0x355f53, 0x1d435c, 0xfbd73a, 0xf9d637, 0xfad42b, 0xfcd21d, 0xfac915, 0xf7aa0d, 0xf59c08, 0xf48f04, 0xf38801, 0x887840, 0xb7fb8, 0x128fc9, 0x1496d2, 0x1498d4, 0x1499d5, 0x1387c8, 0x646681, 0x6d6e8a, 0x666a85, 0x5f6582, 0x586080, 0x515a7d, 0x4b567b, 0x455379, 0x3f4f77, 0x3a4b74, 0x33466e, 0x2d4264, 0x709b3d, 0x7dad2f, 0x7caf18, 0x86b523, 0x8dba2c, 0x94bf33, 0x99c23a, 0x9dc43e, 0x9fc540, 0x9fc642, 0xa0c83f, 0x305b4f, 0x2a4a58, 0xfad22b, 0xfad326, 0xfbd11b, 0xfac814, 0xf7ad0c, 0xf59f09, 0xf49305, 0xf38802, 0xef8200, 0x25708e, 0x1180b8, 0x1393cf, 0x1494d1, 0x1496d3, 0x106fb6, 0x6a6c87, 0x636682, 0x555d7d, 0x4f587a, 0x485478, 0x435077, 0x3c4c74, 0x374972, 0x31456e, 0x2a3f66, 0x5e8444, 0x72a22e, 0x6da117, 0x78ab18, 0x82b11f, 0x88b626, 0x8cba2c, 0x8fbc2f, 0x92bd31, 0x93be32, 0x98c231, 0x204c4c, 0x42544e, 0xfcd11c, 0xfbcc16, 0xf9c312, 0xf8b80f, 0xf7ac0d, 0xf5a109, 0xf49405, 0xf38902, 0xf37d00, 0xcd8713, 0xe72a5, 0x1282bb, 0x138cc8, 0x148fcd, 0x1390ce, 0xb6ab5, 0x686b86, 0x5e627f, 0x595e7c, 0x52597b, 0x4c5477, 0x465176, 0x404d74, 0x3a4a72, 0x344870, 0x2f426d, 0x4e7345, 0x669730, 0x5e9317, 0x699d1a, 0x71a517, 0x7aac19, 0x7fb11c, 0x83b21f, 0x85b422, 0x85b523, 0x8dbb28, 0xa384f, 0x796b3b, 0xfac412, 0xf8bb10, 0xf7b10e, 0xf7a80c, 0xf59e08, 0xf59505, 0xf48d04, 0xed9116, 0xd59d32, 0x7d8a62, 0x1076ae, 0x1283be, 0x1389c7, 0x128cca, 0x148ecc, 0x1491cf, 0x117dbf, 0x323355, 0x2d3055, 0x5c607d, 0x545a79, 0x4e5576, 0x485275, 0x424d73, 0x3d4a71, 0x374771, 0x32446e, 0x2c406a, 0x263b63, 0x4a6e43, 0x5b8d30, 0x508718, 0x598e1a, 0x619617, 0x689d19, 0x6da118, 0x71a619, 0x74a718, 0x75a917, 0x699723, 0x2c58, 0xc08720, 0xf8af0d, 0xf7a80b, 0xf8a106, 0xf7a210, 0xf0a622, 0xa99145, 0x50736c, 0x1f6587, 0xe689b, 0x107bb6, 0x1286c4, 0x138ac9, 0x1287c6, 0x29, 0x535775, 0x515676, 0x4b5273, 0x454e71, 0x3f4b70, 0x3a476f, 0x34446e, 0x2f416c, 0x2a3e68, 0x243860, 0x436b39, 0x50822f, 0x497e20, 0x4a8119, 0x51871a, 0x568c19, 0x5a9118, 0x5e9418, 0x619619, 0x629718, 0x315c29, 0x103760, 0xffa009, 0xf5aa1a, 0xc09433, 0x7f7d51, 0x486a68, 0x105682, 0x15690, 0xa6198, 0xd69a1, 0xf70aa, 0x1076b2, 0x127dba, 0x1282c2, 0x1385c4, 0x191e47, 0x505574, 0x474f70, 0x414b6e, 0x3c486d, 0x37456c, 0x31426a, 0x2c3e6a, 0x273b65, 0x23375d, 0x3c6c31, 0x43782d, 0x427824, 0x3f761a, 0x437b19, 0x487f19, 0x4d8418, 0x568c1d, 0x5b901f, 0x134059, 0x28465e, 0x737753, 0xc4572, 0x4179, 0x74d81, 0xc558b, 0xd5d92, 0xc639b, 0xd69a3, 0xf6ea9, 0xf73af, 0x107bb8, 0x117dbb, 0x1281c1, 0xd64ab, 0xb3aeac, 0x2b3358, 0x424a6c, 0x3e476a, 0x384369, 0x334068, 0x2c3e67, 0x233861, 0x243a56, 0x3c6e2e, 0x3b6f29, 0x386f24, 0x346c19, 0x376e18, 0x3c7419, 0x538b29, 0x65953f, 0x406b42, 0x14415d, 0x83d6c, 0x84475, 0x8467a, 0xa4f83, 0xd5b94, 0xd6099, 0xe659f, 0xd69a5, 0xe6caa, 0x1070ae, 0x1074b0, 0x1078b5, 0x1278b9, 0x117cbb, 0x117ebd, 0x6188a9, 0x2f385b, 0x394266, 0x344065, 0x2f3d65, 0x2a3a63, 0x263862, 0x20335e, 0x2c4848, 0x366d2a, 0x356b27, 0x487e2e, 0x5f9034, 0x527a3a, 0x30554b, 0x153c55, 0x8325d, 0x53567, 0x63c6e, 0x9487d, 0xb4e85, 0xa5289, 0xc5a95, 0xe5f99, 0xd639e, 0xd67a3, 0xe6aa7, 0xe6eab, 0x1071b0, 0x1174b2, 0x1176b5, 0x1278b8, 0x2f395f, 0x313c62, 0x2c3a62, 0x273760, 0x22355f, 0x1d2f5c, 0x577f3e, 0x6a9347, 0x5e814d, 0x38544f, 0xa294e, 0x12458, 0x32c5d, 0x53364, 0x7386a, 0x73d6f, 0x94175, 0xa497f, 0xa4e86, 0xa528a, 0xc558e, 0xc5993, 0xc5d97, 0xd619c, 0xd649f, 0xf68a4, 0xe6aa8, 0xf6dac, 0x1072b1, 0x256ea8, 0x27335a, 0x28365e, 0x23335d, 0x1f315b, 0x1b2f5a, 0x213856, 0xe2655, 0xe2956, 0xd2d58, 0x92d5d, 0x62d60, 0x73265, 0x6376a, 0x9457c, 0xa4a80, 0xc558d, 0xc5891, 0xd5b95, 0xb5e99, 0xd619e, 0xf64a1, 0xe68a5, 0x106aa8, 0x635, 0x16254f, 0x202f59, 0x1b2e59, 0x192d58, 0x142c58, 0x102a59, 0xe2d5b, 0xb2d5d, 0x82d60, 0xa487e, 0xa4e85, 0xc548d, 0xc5791, 0xd5994, 0xd5c97, 0xc5f9b, 0xd629e, 0xe65a1, 0xe66a4, 0xd63a2, 0x182b55, 0x152a56, 0x112957, 0x72d60, 0xd5992, 0xc5b94, 0xc5d98, 0xd5e9c, 0xc609d, 0x24355a, 0xd234f, 0xe2754, 0xa2656, 0x6295a, 0xb5a95, 0xb5b8c0, 0x62554, 0x42757, 0x4295b, 0x5c83a1, 0x657690, 0x3a6991, 0x98a4b1];
/* Encoded entity positions generated by the countdown builder.
 * Includes information about the grid size and increments, which allows for
 * larger or smaller grids per shape.
 */

/**
 * We use Math.PI * 2 a lot when drawing the dots, so we store it here.
 */
var PI2 = Math.PI * 2;

/**
 * Class CountdownMaterial
 * A wrapper around the Three.js ParticleCanvasMaterial.
 * @param {Object} opts Settings for CountdownMaterial.
 * @param {Object} opts.color color value for material.
 * @param {Function} opts.program function used to draw material.
 */
function CountdownMaterial(opts) {
  this.color = opts.color;
  if (opts.program) {
    this.program = opts.program;
  }
  this.material = new THREE.ParticleCanvasMaterial({
    color: this.color,
    program: this.program
  });
}

/**
 * Default function used to draw a dot.
 * @param {Object} ctx Canvas context to draw on.
 */
CountdownMaterial.prototype.program = function(ctx) {
  ctx.beginPath();
  ctx.arc(0, 0, 1, 0, PI2, true);
  ctx.closePath();
  ctx.fill();
};

/**
 * Class CountdownParticle
 * A wrapper around the Three.js Particle.
 * @param {Object} opts Settings for CountdownParticle.
 * @param {THREE.ParticleCanvasMaterial} opts.material material used
 *     in the THREE.Particle
 * @param {Number} opts.x Positional x value.
 * @param {Number} opts.y Positional y value.
 * @param {Number} opts.z Positional z value.
 * @param {Number} opts.scale Scale of the particle.
 * @param {Number} opts.delay Delay at which the Tween starts when
 *     the splode function is called.
 */
function CountdownParticle(opts) {
  for (k in opts) {
    this[k] = opts[k];
  }
  this.z = (opts.z || 0);
  this.material = opts.material;
  this.particle = new THREE.Particle(this.material);
  this.particle.position.x = (opts.x || 0);
  this.particle.position.y = (opts.y || 0);
  this.particle.position.z = (opts.z || 0);
  this.particle.scale.x = this.particle.scale.y = (opts.scale || 1);
  this.delay = (opts.delay || 0);
}

/**
 * Change the position of the Particle by using the TWEEN library.
 * Generates a random x, y and z position and fires off a call
 * to the TWEEN.Tween function. On complete, it fires off the
 * afterSplode function on the entity if it hasn't been called already.
 */
CountdownParticle.prototype.splode = function() {
  var self = this;
  var splodeTo = {x: (Math.random() * 2500) - 1250,
                  y: (Math.random() * 2500) - 1250,
                  z: (Math.random() * 6500) - 5500};
  new TWEEN.Tween(this.particle.position)
    .delay(this.delay)
    .to(splodeTo, 2000)
    .easing(TWEEN.Easing.Exponential.EaseOut)
    .onComplete(function() {
      if (self.particle.position.z < -2000) {
        self.exit.call(self);
      }
      if (!self.entity.calledAfterSplode) {
        self.entity.afterSplode.call(self);
        self.entity.calledAfterSplode = true;
      }
    }).start();
};

/**
 * Change the position of the Particle by using the TWEEN library.
 * Resets the Particle back to it's origin x, y, and z coordinates.
 */
CountdownParticle.prototype.implode = function() {
  new TWEEN.Tween(this.particle.position)
    .delay(Math.random()*300)
    .to({x: this.originX - 400, y: this.originY + 100, z: this.originZ}, 1000)
    .easing(TWEEN.Easing.Circular.EaseOut)
    .start();
};

/**
 * Make the Particle exit the scene using the TWEEN library.
 * Adds to the z position value, then on complete, reduces the
 * associated entity's particle count and fires off the
 * entity's afterExit callback once the particle count reaches zero.
 */
CountdownParticle.prototype.exit = function() {
  var self = this;
  new TWEEN.Tween(this.particle.scale)
    .delay(this.delay)
    .to({x: 0, y: 0}, 1000)
    .easing(TWEEN.Easing.Circular.EaseIn)
    .onComplete(function() {
      self.entity.group.removeChild(self.particle);
      self.entity.particleLength--;
      if (self.entity.particleLength === 0) {
        self.entity.afterExit();
      }
    }).start();
};

/**
 * Class CountdownEntity
 * Manages state of a countdown shape, holding references
 * to CountdownMaterials and CountdownParticles.
 * Calls the build function on initialization.
 * @param {Object} opts Settings for CountdownEntity.
 * @param {Boolean} opts.first If set to true, will render
 *     the entity in it's formed state instead of the implosion
 *     transition.
 * @param {THREE.Object3D} opts.group Group of Three.js objects to
 *     manipulate.
 * @param {Object} opts.entity The positional coordinates
 *     which to place particles at.
 * @param {Function} opts.afterSplode callback to run after the splode
 *     function is complete
 * @param {Function} opts.afterExit callback to run after the exit
 *     function is complete
 */
function CountdownEntity(opts) {
  this.first = opts.first;
  this.group = opts.group;
  this.entity = opts.entity;
  this.materials = [];
  this.particles = [];
  this.particleLength = 0;
  this.afterSplode = (opts.afterSplode || function() {});
  this.afterExit = (opts.afterExit || function() {});
  this.build();
}

/**
 * Add a CountdownParticle to the particles list.
 * Also sets the associated entity of the particle
 * so it can reference callbacks.
 * Adds the CountdownParticle's THREE.Particle to the
 * group so Three.js can render it.
 */
CountdownEntity.prototype.addParticle = function(p) {
  this.particles.push(p);
  p.entity = this;
  this.group.addChild(p.particle);
  this.particleLength++;
};

/**
 * Run through each particle in the particles list
 * and call the splode function on it.
 */
CountdownEntity.prototype.splode = function() {
  for (var i = 0; i < this.particleLength; i++) {
    this.particles[i].splode();
  }
};

/**
 * Run through each particle in the particles list
 * and call the implode function on it.
 */
CountdownEntity.prototype.implode = function() {
  for (var i = 0; i < this.particleLength; i++) {
    this.particles[i].implode();
  }
};

/**
 * Run through each particle in the particles list
 * and call the exit function on it.
 */
CountdownEntity.prototype.exit = function() {
  for (var i = 0; i < this.particleLength; i++) {
    this.particles[i].exit.call(this.particles[i]);
  }
};

/**
 * Takes the entity object and runs through it adding
 * CountdownParticles from the values.
 * Will randomly set the current x, y and z values of the particle
 * unless the first attribute is true, which will make it use the
 * particle's intended coordinates that form the shape.
 * Calls implode to start the transition to form the shape.
 */
CountdownEntity.prototype.build = function() {
  this.gridSize = this.entity.grid.incr * this.entity.grid.size;
  for (var i = 0; i < colors.length; i++) {
    this.materials.push(new CountdownMaterial({ color: colors[i] }));
  }
  for (var i = 0; i < this.entity.dots.length; i++) {
    var vals = this.entity.dots[i];
    var x = parseInt(vals[0], 10);
    var y = parseInt(vals[1], 10);
    var c = parseInt(vals[2], 10);
    if (this.first) {
      var temp = {x: (x * this.entity.grid.incr) - this.gridSize / 2,
                  y: ((y * this.entity.grid.incr) * -1) + this.gridSize / 2,
                  z: 0};
    } else {
      var temp = {x: (Math.random() * 2500) - 1250,
                  y: (Math.random() * 2500) - 1250,
                  z: (Math.random() * 3000) - 1500};
    }
    this.addParticle(new CountdownParticle({
      originX: (x * this.entity.grid.incr) - this.gridSize / 2,
      originY: ((y * this.entity.grid.incr) * -1) + this.gridSize / 2,
      originZ: 0,
      x: temp.x,
      y: temp.y,
      z: temp.z,
      scale: 7,
      material: this.materials[c].material,
      delay: 0,
      entity: this
    }));
  }
  this.implode();
};

/**
 * Wrapper around control functions that run the transitions.
 */
var countdownFinale = (function() {

  /**
   * Store if we've initialized or not. Used when creating a
   * CountdownEntity to determine if it's the first one, which
   * forces it to draw it's shape without imploding.
   */
  var initialized = false;

  /**
   * Variable to hold the swap timeout, in case someone clicks
   * we clear the timeout for the next splode.
   */
  var swapTimeout;

  /**
   * Variables used for DOM elements.
   */
  var container, stats, debug;

  /**
   * Variables used for Three.js scene.
   */
  var camera, scene, renderer;

  /**
   * Variables used to track mouse movement, used to adjust
   * camera and rotation values of the Three.js scene.
   */
  var mouseX = 0, mouseY = 0, mouseXOnMouseDown = 0;
  var targetRotationOnMouseDown = 0, targetRotation = 0;

  /**
   * Store the center X and Y of the window. Used when adjusting
   * the camera and rotation to make it appear to use the center of
   * the window as the point of reference.
   */
  var windowHalfX = window.innerWidth / 2;
  var windowHalfY = window.innerHeight / 2;

  /**
   * To simulate camera easing, the factor to multiply the camera
   * position when the mouse is moved.
   */
  var positionAdjustment = 0.02;
  var mouseAdjustment = 1;

  /**
   * Variables to track entity coordinate objects.
   */
  var entities = [], currentEntityDesign = 0;

  /**
   * Called in a loop using requestAnimationFrame, then calling
   * the render function and updating the stats area.
   */
  function animate() {
    requestAnimationFrame(animate);
    render();
    if (stats) {
      stats.update();
    }
  }

  /**
   * Update the scene, adjusting the camera, updating any TWEEN transitions,
   * and render the scene as it's currently set up.
   */
  function render() {
    TWEEN.update();
    camera.position.x += ( mouseX - camera.position.x ) * positionAdjustment;
    camera.position.y += ( - mouseY - camera.position.y ) * positionAdjustment;
    renderer.render(scene, camera);
  }

  /**
   * Track the mouse movements and adjust mouseX and mouseY, in turn
   * updating the camera angle when render is called.
   * @param {Event} e
   */
  function onDocumentMouseMove(e) {
    mouseX = (e.clientX - windowHalfX) / mouseAdjustment;
    mouseY = (e.clientY - windowHalfY) / mouseAdjustment;
  }

  /**
   * Allow the user to rotate and adjust camera zoom with arrow keys.
   * Will call splodeEntity when enter key is pressed.
   * @param {Event} e
   */
  function onDocumentKeyDown(e) {
    switch (e.keyCode) {
     case 37:
      targetRotation -= 0.05;
      break;
     case 38:
      camera.position.z -= 1;
      break;
     case 39:
      targetRotation += 0.05;
      break;
     case 40:
      camera.position.z += 1;
      break;
     case 13:
      onDocumentClick();
      break;
     case 67:
      camera.position.x -= 1;
      break;
     case 85:
      camera.position.y -= 1;
      break;
     case 88:
      camera.position.x += 1;
      break;
     case 89:
      camera.position.y += 1;
      break;
    default:
      break;
    }
  }

  /**
   * Call splodeEntity if the user clicks anywhere on the window.
   * @param {Event} e
   */
  function onDocumentClick(e) {
    if (swapTimeout) {
      swapTimeout.stop();
      entities[0].exit();
    }
    splodeEntity();
  }

  /**
   * Generate a new Three.Object3D, and attach a new CountdownEntity
   * to it. Push the new entity onto the list of entities so we can
   * process them further. Adds group to the Three.js scene.
   * Sets afterSplode callback to the swapEntity function, and afterExit
   * to the removeEntity function.
   */
  function showEntity() {
    var group = new THREE.Object3D();
    var e = new CountdownEntity({
      group: group,
      entity: entityDesigns[currentEntityDesign],
      afterSplode: swapEntity,
      afterExit: removeEntity,
      first: !initialized
    });
    entities.push(e);
    scene.addObject(e.group);
    initialized = true;
  }

  /**
   * Call the splode function on the last item in the entities list.
   */
  function splodeEntity() {
    new TWEEN.Tween(camera.position)
      .delay(0)
      .to({x: camera.position.x+((Math.random()*1200)-600),
           y: camera.position.y+((Math.random()*1200)-600),
           z: camera.position.z-((Math.random()*100)-50)}, 400)
      .easing(TWEEN.Easing.Circular.EaseIn).start();
    entities[entities.length-1].splode();
  }

  /**
   * Take the first entity in the entities list out and remove it
   * from the scene, only if there are two items in the list.
   * Effectively keeps only two shapes on the scene at a time.
   */
  function removeEntity() {
    if (entities.length == 2) {
      var oldGroup = entities.shift();
      scene.removeObject(oldGroup.group);
      oldGroup = null;
    }
  }

  /**
   * Make the first item in the entities list exit, point to the next
   * entity in the entityDesigns list, then call showEntity to transition
   * the new shape in.
   */
  var direction = -1;
  function swapEntity() {
    currentEntityDesign++;
    showEntity();
    if (currentEntityDesign + 1 != entityDesigns.length) {
      if (camera.position.z < 800) {
        direction = 1;
      } else if (camera.position.z > 1000) {
        direction = -1;
      }
      swapTimeout = new TWEEN.Tween(camera.position)
        .to({z: camera.position.z+(200*direction)}, 4000)
        .onComplete(function() {
          entities[0].exit();
          splodeEntity();
        }).easing(TWEEN.Easing.Circular.EaseIn).start();
    }
    if (currentEntityDesign + 1 == entityDesigns.length) {
      var prog = function(c) {
        //c.save();c.fillStyle="#898989";c.strokeStyle='#898989';c.globalAlpha=1.0;c.lineWidth="0";c.lineCap="butt";c.lineJoin="round";c.mitterLimit="1";c.beginPath();c.moveTo(119.82400,221.75600);c.bezierCurveTo(119.62100,220.99001,119.42900,220.17400,119.25000,219.30701);c.bezierCurveTo(119.25000,219.30701,118.90200,217.58400,118.74600,216.74100);c.bezierCurveTo(118.74600,216.74100,118.45300,215.09300,118.33600,214.32700);c.bezierCurveTo(118.33600,214.32700,118.12100,212.88901,118.04300,212.31100);c.bezierCurveTo(117.96500,212.90500,117.87100,213.55701,117.76200,214.26801);c.bezierCurveTo(117.76200,214.26801,117.53200,215.71700,117.39900,216.48300);c.bezierCurveTo(117.39900,216.48300,117.12200,218.01801,116.96500,218.79201);c.bezierCurveTo(116.96500,218.79201,116.63700,220.31200,116.44900,221.03000);c.lineTo(111.22200,241.86600);c.lineTo(106.60500,241.86600);c.lineTo(115.65200,207.60001);c.lineTo(120.05800,207.60001);c.lineTo(125.73000,229.44400);c.bezierCurveTo(125.94900,230.28799,126.15600,231.14700,126.35100,232.02200);c.bezierCurveTo(126.35100,232.02200,126.72200,233.70200,126.87800,234.43600);c.bezierCurveTo(127.05000,235.29500,127.22200,236.12399,127.39400,236.92000);c.bezierCurveTo(127.56600,236.10800,127.74600,235.27200,127.93300,234.41200);c.bezierCurveTo(128.10500,233.67799,128.29201,232.88901,128.49500,232.04500);c.bezierCurveTo(128.49500,232.04500,128.90900,230.38100,129.12801,229.58400);c.lineTo(135.08099,207.60001);c.lineTo(139.48700,207.60001);c.lineTo(148.08900,241.86600);c.lineTo(143.42500,241.86600);c.lineTo(138.73700,221.19400);c.bezierCurveTo(138.56500,220.42799,138.40500,219.64301,138.25700,218.83900);c.bezierCurveTo(138.25700,218.83900,137.97200,217.24500,137.84700,216.47200);c.bezierCurveTo(137.84700,216.47200,137.61301,214.96001,137.51900,214.25700);c.bezierCurveTo(137.51900,214.25700,137.34700,212.90500,137.28500,212.31200);c.bezierCurveTo(137.19099,212.90601,137.07001,213.57001,136.92200,214.30400);c.bezierCurveTo(136.92200,214.30400,136.60201,215.81599,136.40601,216.63600);c.bezierCurveTo(136.40601,216.63600,136.00000,218.30400,135.77299,219.17900);c.bezierCurveTo(135.77299,219.17900,135.31599,220.92900,135.08200,221.80400);c.lineTo(129.71500,241.86600);c.lineTo(125.09800,241.86600);c.lineTo(119.82400,221.75600);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(169.25400,207.60001);c.lineTo(169.25400,225.22501);c.bezierCurveTo(169.25400,226.75600,169.06599,228.06100,168.69200,229.13901);c.bezierCurveTo(168.69200,229.13901,167.75101,231.10400,166.99300,231.79900);c.bezierCurveTo(166.99300,231.79900,165.27400,233.00200,164.11000,233.32201);c.bezierCurveTo(164.11000,233.32201,161.56700,233.80200,159.97301,233.80200);c.bezierCurveTo(158.41100,233.80200,156.91800,233.58299,155.49600,233.14600);c.bezierCurveTo(155.49600,233.14600,152.78500,232.17700,151.62900,231.55200);c.lineTo(153.12900,228.34100);c.bezierCurveTo(154.16000,228.87199,155.23399,229.32500,156.35201,229.70000);c.bezierCurveTo(156.35201,229.70000,158.67599,230.26199,159.97301,230.26199);c.bezierCurveTo(160.78500,230.26199,161.50800,230.16800,162.14101,229.98100);c.bezierCurveTo(162.14101,229.98100,163.30499,229.48500,163.73500,229.05499);c.bezierCurveTo(163.73500,229.05499,164.49300,228.05901,164.71899,227.35600);c.bezierCurveTo(164.71899,227.35600,165.05901,225.77800,165.05901,224.73100);c.lineTo(165.05901,223.11400);c.lineTo(160.74699,222.95000);c.bezierCurveTo(157.05901,222.82500,154.31300,222.07500,152.50900,220.70000);c.bezierCurveTo(152.50900,220.70000,149.80200,217.35600,149.80200,214.79401);c.bezierCurveTo(149.80200,213.48199,149.99001,212.34500,150.36400,211.38400);c.bezierCurveTo(150.36400,211.38400,151.25900,209.62601,151.92300,208.99300);c.bezierCurveTo(151.92300,208.99300,153.37199,207.89101,154.27800,207.58701);c.bezierCurveTo(154.27800,207.58701,156.17599,207.13000,157.25500,207.13000);c.bezierCurveTo(158.23900,207.13000,159.10699,207.20799,159.85699,207.36400);c.bezierCurveTo(159.85699,207.36400,161.28700,207.76199,161.89600,208.09100);c.bezierCurveTo(161.89600,208.09100,163.06799,208.83701,163.58400,209.34500);c.bezierCurveTo(163.58400,209.34500,164.61501,210.45799,165.13100,211.16100);c.lineTo(165.31900,211.16100);c.lineTo(166.18600,207.59900);c.lineTo(169.25400,207.59900);c.closePath();c.moveTo(155.36700,211.58400);c.bezierCurveTo(154.60899,212.25600,154.23000,213.31100,154.23000,214.74800);c.bezierCurveTo(154.23000,215.54500,154.35500,216.25999,154.60500,216.89301);c.bezierCurveTo(154.60500,216.89301,155.26500,218.06500,155.83501,218.50999);c.bezierCurveTo(155.83501,218.50999,157.16701,219.30299,158.12000,219.55299);c.bezierCurveTo(158.12000,219.55299,160.25301,219.95900,161.65900,220.02200);c.lineTo(165.01100,220.18600);c.lineTo(165.01100,217.86600);c.bezierCurveTo(165.01100,216.63200,164.84300,215.55701,164.50700,214.64301);c.bezierCurveTo(164.50700,214.64301,163.70599,212.97099,163.11200,212.37000);c.bezierCurveTo(163.11200,212.37000,161.81500,211.31900,161.00301,211.02200);c.bezierCurveTo(161.00301,211.02200,159.30800,210.57700,158.35500,210.57700);c.bezierCurveTo(157.12100,210.57600,156.12500,210.91200,155.36700,211.58400);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(182.50800,211.77100);c.bezierCurveTo(182.01601,212.53700,181.77000,213.67700,181.77000,215.19299);c.lineTo(181.77000,230.12300);c.lineTo(188.23900,230.12300);c.lineTo(188.23900,233.33400);c.lineTo(181.77000,233.33400);c.lineTo(181.77000,239.24001);c.lineTo(179.30901,239.24001);c.lineTo(177.48100,233.84900);c.lineTo(173.84801,232.02100);c.lineTo(173.84801,230.12300);c.lineTo(177.48100,230.12300);c.lineTo(177.48100,215.19299);c.bezierCurveTo(177.48100,213.61501,177.65300,212.30600,177.99699,211.26700);c.bezierCurveTo(177.99699,211.26700,178.81300,209.40401,179.41499,208.79401);c.bezierCurveTo(179.41499,208.79401,180.73100,207.75500,181.56000,207.50500);c.bezierCurveTo(181.56000,207.50500,183.28700,207.13000,184.25500,207.13000);c.bezierCurveTo(184.64600,207.13000,185.04401,207.14999,185.45000,207.18900);c.bezierCurveTo(185.45000,207.18900,186.24699,207.28300,186.62199,207.35300);c.bezierCurveTo(186.62199,207.35300,187.34100,207.50500,187.65300,207.59900);c.bezierCurveTo(187.65300,207.59900,188.22301,207.78700,188.42599,207.88000);c.lineTo(188.42599,211.11400);c.bezierCurveTo(188.28500,211.06700,188.07800,211.01199,187.80499,210.95000);c.bezierCurveTo(187.80499,210.95000,187.23100,210.83299,186.90300,210.78600);c.bezierCurveTo(186.90300,210.78600,186.23500,210.70000,185.88300,210.66901);c.bezierCurveTo(185.88300,210.66901,185.21500,210.62199,184.93401,210.62199);c.bezierCurveTo(183.80901,210.62300,183.00000,211.00600,182.50800,211.77100);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(206.78900,207.48199);c.bezierCurveTo(207.75000,207.71600,208.65199,208.06000,209.49600,208.51300);c.lineTo(209.49600,212.31000);c.bezierCurveTo(208.65199,211.91901,207.71899,211.58000,206.69501,211.28999);c.bezierCurveTo(206.69501,211.28999,204.52699,210.85600,203.26100,210.85600);c.bezierCurveTo(200.94901,210.85600,199.22600,211.61800,198.09300,213.14101);c.bezierCurveTo(198.09300,213.14101,196.39400,217.07500,196.39400,220.37100);c.bezierCurveTo(196.39400,223.68300,196.95599,226.12500,198.08200,227.69501);c.bezierCurveTo(198.08200,227.69501,200.99600,230.05000,203.44901,230.05000);c.bezierCurveTo(203.85500,230.05000,204.28500,230.01500,204.73801,229.94501);c.bezierCurveTo(204.73801,229.94501,205.65199,229.78101,206.12100,229.66400);c.bezierCurveTo(206.12100,229.66400,207.04300,229.41400,207.48000,229.26601);c.bezierCurveTo(207.48000,229.26601,208.31599,228.96500,208.67500,228.80901);c.lineTo(209.94099,232.41800);c.bezierCurveTo(209.16000,232.80901,208.18700,233.13699,207.02299,233.40199);c.bezierCurveTo(207.02299,233.40199,204.66800,233.80000,203.44901,233.80000);c.bezierCurveTo(201.85500,233.80000,200.36301,233.55800,198.97200,233.07300);c.bezierCurveTo(198.97200,233.07300,196.36700,231.81100,195.32700,230.74100);c.bezierCurveTo(195.32700,230.74100,193.47200,228.28000,192.87801,226.56900);c.bezierCurveTo(192.87801,226.56900,191.98700,222.77600,191.98700,220.32300);c.bezierCurveTo(191.98700,217.97900,192.27600,215.97501,192.85400,214.31100);c.bezierCurveTo(192.85400,214.31100,194.22900,211.28000,195.24500,210.20900);c.bezierCurveTo(195.24500,210.20900,197.45599,208.35699,198.83099,207.86501);c.bezierCurveTo(198.83099,207.86501,201.68300,207.12700,203.26100,207.12700);c.bezierCurveTo(204.65199,207.13100,205.82800,207.24800,206.78900,207.48199);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(235.98000,207.60001);c.lineTo(235.98000,224.40500);c.bezierCurveTo(235.98000,227.68600,235.25700,230.07300,233.81200,231.56500);c.bezierCurveTo(233.81200,231.56500,230.21400,233.80299,227.35500,233.80299);c.bezierCurveTo(226.60500,233.80299,225.87100,233.72501,225.15199,233.56900);c.bezierCurveTo(225.15199,233.56900,223.75400,233.17101,223.11301,232.84200);c.bezierCurveTo(223.11301,232.84200,221.88300,232.10400,221.34300,231.61200);c.bezierCurveTo(221.34300,231.61200,220.33900,230.53799,219.94800,229.86600);c.lineTo(219.71400,229.86600);c.lineTo(219.90199,233.24100);c.lineTo(219.90199,244.06900);c.lineTo(215.63600,244.06900);c.lineTo(215.63600,207.60001);c.lineTo(219.90199,207.60001);c.lineTo(219.90199,220.93600);c.bezierCurveTo(219.90199,222.43600,220.01500,223.76401,220.24200,224.92000);c.bezierCurveTo(220.24200,224.92000,220.84399,227.05299,221.36700,227.85001);c.bezierCurveTo(221.36700,227.85001,222.58200,229.24800,223.44099,229.65500);c.bezierCurveTo(223.44099,229.65500,225.36301,230.26401,226.62900,230.26401);c.bezierCurveTo(228.37900,230.26401,229.66400,229.75600,230.48399,228.74100);c.bezierCurveTo(230.48399,228.74100,231.71400,226.20200,231.71400,224.17101);c.lineTo(231.71400,207.60001);c.lineTo(235.98000,207.60001);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(261.72699,211.77100);c.bezierCurveTo(261.23499,212.53700,260.98901,213.67700,260.98901,215.19299);c.lineTo(260.98901,230.12300);c.lineTo(267.45801,230.12300);c.lineTo(267.45801,233.33400);c.lineTo(260.98901,233.33400);c.lineTo(260.98901,239.24001);c.lineTo(258.52802,239.24001);c.lineTo(256.70001,233.84900);c.lineTo(253.06700,232.02100);c.lineTo(253.06700,230.12300);c.lineTo(256.70001,230.12300);c.lineTo(256.70001,215.19299);c.bezierCurveTo(256.70001,213.61501,256.87201,212.30600,257.21600,211.26700);c.bezierCurveTo(257.21600,211.26700,258.03201,209.40401,258.63400,208.79401);c.bezierCurveTo(258.63400,208.79401,259.95001,207.75500,260.77899,207.50500);c.bezierCurveTo(260.77899,207.50500,262.50601,207.13000,263.47400,207.13000);c.bezierCurveTo(263.86499,207.13000,264.26300,207.14999,264.66901,207.18900);c.bezierCurveTo(264.66901,207.18900,265.46600,207.28300,265.84100,207.35300);c.bezierCurveTo(265.84100,207.35300,266.56000,207.50500,266.87201,207.59900);c.bezierCurveTo(266.87201,207.59900,267.44199,207.78700,267.64499,207.88000);c.lineTo(267.64499,211.11400);c.bezierCurveTo(267.50400,211.06700,267.29700,211.01199,267.02399,210.95000);c.bezierCurveTo(267.02399,210.95000,266.45001,210.83299,266.12201,210.78600);c.bezierCurveTo(266.12201,210.78600,265.45401,210.70000,265.10199,210.66901);c.bezierCurveTo(265.10199,210.66901,264.43399,210.62199,264.15302,210.62199);c.bezierCurveTo(263.02701,210.62300,262.21899,211.00600,261.72699,211.77100);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(292.98001,207.60001);c.lineTo(292.98001,224.40500);c.bezierCurveTo(292.98001,227.68600,292.25699,230.07300,290.81201,231.56500);c.bezierCurveTo(290.81201,231.56500,287.21399,233.80299,284.35501,233.80299);c.bezierCurveTo(283.60501,233.80299,282.87100,233.72501,282.15201,233.56900);c.bezierCurveTo(282.15201,233.56900,280.75400,233.17101,280.11301,232.84200);c.bezierCurveTo(280.11301,232.84200,278.88300,232.10400,278.34299,231.61200);c.bezierCurveTo(278.34299,231.61200,277.33899,230.53799,276.94800,229.86600);c.lineTo(276.71399,229.86600);c.lineTo(276.90201,233.24100);c.lineTo(276.90201,244.06900);c.lineTo(272.63599,244.06900);c.lineTo(272.63599,207.60001);c.lineTo(276.90201,207.60001);c.lineTo(276.90201,220.93600);c.bezierCurveTo(276.90201,222.43600,277.01501,223.76401,277.24200,224.92000);c.bezierCurveTo(277.24200,224.92000,277.84399,227.05299,278.36700,227.85001);c.bezierCurveTo(278.36700,227.85001,279.58200,229.24800,280.44101,229.65500);c.bezierCurveTo(280.44101,229.65500,282.36301,230.26401,283.62900,230.26401);c.bezierCurveTo(285.37900,230.26401,286.66400,229.75600,287.48401,228.74100);c.bezierCurveTo(287.48401,228.74100,288.71399,226.20200,288.71399,224.17101);c.lineTo(288.71399,207.60001);c.lineTo(292.98001,207.60001);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(313.28900,207.22501);c.bezierCurveTo(313.96899,207.28700,314.62500,207.38901,315.25800,207.53000);c.bezierCurveTo(315.25800,207.53000,316.50800,207.85001,317.10999,208.06900);c.bezierCurveTo(317.10999,208.06900,318.32501,208.54601,318.95001,208.84200);c.lineTo(318.95001,212.63901);c.bezierCurveTo(318.34100,212.35800,317.73901,212.10400,317.14499,211.87700);c.bezierCurveTo(317.14499,211.87700,315.93799,211.46300,315.30499,211.31500);c.bezierCurveTo(315.30499,211.31500,314.01599,211.05299,313.33600,210.97501);c.bezierCurveTo(313.33600,210.97501,311.91800,210.85800,311.12100,210.85800);c.bezierCurveTo(308.76199,210.85800,306.98401,211.56900,305.78900,212.99100);c.bezierCurveTo(305.78900,212.99100,303.95700,216.63200,303.87900,219.64700);c.lineTo(320.09799,219.64700);c.lineTo(320.09799,222.29500);c.bezierCurveTo(320.09799,224.01401,319.86801,225.58000,319.40701,226.99400);c.bezierCurveTo(319.40701,226.99400,318.28601,229.61900,317.42700,230.62700);c.bezierCurveTo(317.42700,230.62700,315.52100,232.41600,314.28601,232.97099);c.bezierCurveTo(314.28601,232.97099,311.66101,233.80299,310.11401,233.80299);c.bezierCurveTo(308.53601,233.80299,307.09399,233.49800,305.79001,232.88901);c.bezierCurveTo(305.79001,232.88901,303.36401,231.39301,302.42700,230.22900);c.bezierCurveTo(302.42700,230.22900,300.76300,227.64700,300.24701,225.97501);c.bezierCurveTo(300.24701,225.97501,299.47400,222.40500,299.47400,220.28000);c.bezierCurveTo(299.47400,218.17101,299.75500,216.29601,300.31799,214.65500);c.bezierCurveTo(300.31799,214.65500,301.67300,211.63901,302.69699,210.53000);c.bezierCurveTo(302.69699,210.53000,304.94299,208.57700,306.36499,207.99899);c.bezierCurveTo(306.36499,207.99899,309.35699,207.13200,311.07599,207.13200);c.bezierCurveTo(311.87100,207.13100,312.60901,207.16200,313.28900,207.22501);c.closePath();c.moveTo(312.50400,229.74800);c.bezierCurveTo(313.19199,229.40401,313.75800,228.92000,314.20300,228.29500);c.bezierCurveTo(314.20300,228.29500,314.97601,226.91600,315.18701,226.03300);c.bezierCurveTo(315.18701,226.03300,315.50299,224.17799,315.50299,223.11501);c.lineTo(303.97198,223.11501);c.bezierCurveTo(304.14401,225.44299,304.74899,227.21700,305.78799,228.43500);c.bezierCurveTo(305.78799,228.43500,308.23700,230.26300,310.01801,230.26300);c.bezierCurveTo(310.98801,230.26401,311.81601,230.09200,312.50400,229.74800);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(342.90201,220.88901);c.lineTo(343.27701,227.33400);c.lineTo(343.27701,244.06799);c.lineTo(339.05801,244.06799);c.lineTo(339.05801,207.60001);c.lineTo(343.27701,207.60001);c.lineTo(343.27701,217.49100);c.lineTo(345.83200,219.41299);c.lineTo(353.70700,207.60100);c.lineTo(358.60501,207.60100);c.lineTo(348.57401,222.20300);c.lineTo(357.97198,233.33600);c.lineTo(353.02701,233.33600);c.lineTo(346.16000,224.87500);c.lineTo(342.99600,220.89101);c.lineTo(342.90201,220.89101);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(375.25800,207.22501);c.bezierCurveTo(375.93799,207.28700,376.59399,207.38901,377.22699,207.53000);c.bezierCurveTo(377.22699,207.53000,378.47699,207.85001,379.07901,208.06900);c.bezierCurveTo(379.07901,208.06900,380.29401,208.54601,380.91901,208.84200);c.lineTo(380.91901,212.63901);c.bezierCurveTo(380.31000,212.35800,379.70801,212.10400,379.11401,211.87700);c.bezierCurveTo(379.11401,211.87700,377.90701,211.46300,377.27399,211.31500);c.bezierCurveTo(377.27399,211.31500,375.98499,211.05299,375.30499,210.97501);c.bezierCurveTo(375.30499,210.97501,373.88699,210.85800,373.09000,210.85800);c.bezierCurveTo(370.73099,210.85800,368.95300,211.56900,367.75800,212.99100);c.bezierCurveTo(367.75800,212.99100,365.92599,216.63200,365.84799,219.64700);c.lineTo(382.06699,219.64700);c.lineTo(382.06699,222.29500);c.bezierCurveTo(382.06699,224.01401,381.83701,225.58000,381.37601,226.99400);c.bezierCurveTo(381.37601,226.99400,380.25500,229.61900,379.39600,230.62700);c.bezierCurveTo(379.39600,230.62700,377.48999,232.41600,376.25500,232.97099);c.bezierCurveTo(376.25500,232.97099,373.63000,233.80299,372.08301,233.80299);c.bezierCurveTo(370.50500,233.80299,369.06299,233.49800,367.75900,232.88901);c.bezierCurveTo(367.75900,232.88901,365.33301,231.39301,364.39600,230.22900);c.bezierCurveTo(364.39600,230.22900,362.73199,227.64700,362.21600,225.97501);c.bezierCurveTo(362.21600,225.97501,361.44299,222.40500,361.44299,220.28000);c.bezierCurveTo(361.44299,218.17101,361.72400,216.29601,362.28699,214.65500);c.bezierCurveTo(362.28699,214.65500,363.64200,211.63901,364.66599,210.53000);c.bezierCurveTo(364.66599,210.53000,366.91199,208.57700,368.33401,207.99899);c.bezierCurveTo(368.33401,207.99899,371.32599,207.13200,373.04501,207.13200);c.bezierCurveTo(373.84000,207.13100,374.57800,207.16200,375.25800,207.22501);c.closePath();c.moveTo(374.47299,229.74800);c.bezierCurveTo(375.16101,229.40401,375.72699,228.92000,376.17200,228.29500);c.bezierCurveTo(376.17200,228.29500,376.94501,226.91600,377.15601,226.03300);c.bezierCurveTo(377.15601,226.03300,377.47198,224.17799,377.47198,223.11501);c.lineTo(365.94101,223.11501);c.bezierCurveTo(366.11301,225.44299,366.71799,227.21700,367.75699,228.43500);c.bezierCurveTo(367.75699,228.43500,370.20599,230.26300,371.98700,230.26300);c.bezierCurveTo(372.95700,230.26401,373.78500,230.09200,374.47299,229.74800);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(394.46500,207.36501);c.lineTo(393.12900,203.61501);c.bezierCurveTo(392.89499,202.97400,392.63300,202.40401,392.34399,201.90401);c.bezierCurveTo(392.34399,201.90401,391.70700,200.98199,391.30099,200.63800);c.bezierCurveTo(391.30099,200.63800,390.41800,200.03300,389.87100,199.85300);c.bezierCurveTo(389.87100,199.85300,388.67599,199.58299,387.92599,199.58299);c.bezierCurveTo(387.37900,199.58299,386.85599,199.61000,386.35599,199.66499);c.bezierCurveTo(386.35599,199.66499,385.44199,199.78600,385.11401,199.86400);c.lineTo(385.11401,196.46600);c.bezierCurveTo(385.53601,196.37199,386.04401,196.28200,386.63699,196.19600);c.bezierCurveTo(386.63699,196.19600,387.93399,196.06700,388.74600,196.06700);c.bezierCurveTo(389.99600,196.06700,391.07401,196.25800,391.98001,196.64101);c.bezierCurveTo(391.98001,196.64101,393.67499,197.56700,394.34698,198.27000);c.bezierCurveTo(394.34698,198.27000,395.60901,199.82899,396.11700,200.83600);c.bezierCurveTo(396.11700,200.83600,397.09698,202.98100,397.53500,204.24600);c.lineTo(407.70700,233.33200);c.lineTo(403.30099,233.33200);c.lineTo(398.63699,219.01199);c.bezierCurveTo(398.46500,218.49600,398.26599,217.87100,398.03900,217.13699);c.bezierCurveTo(398.03900,217.13699,397.59399,215.65700,397.38300,214.89900);c.bezierCurveTo(397.38300,214.89900,396.98099,213.42599,396.80899,212.75400);c.bezierCurveTo(396.80899,212.75400,396.51199,211.55099,396.43399,211.16000);c.lineTo(396.29300,211.16000);c.bezierCurveTo(396.23099,211.70700,396.12900,212.30099,395.98801,212.94099);c.bezierCurveTo(395.98801,212.94099,395.67899,214.24600,395.48401,214.93300);c.bezierCurveTo(395.48401,214.93300,395.07800,216.30800,394.85101,216.99500);c.bezierCurveTo(394.85101,216.99500,394.40201,218.33900,394.18301,218.96400);c.lineTo(389.14401,233.33099);c.lineTo(384.71399,233.33099);c.lineTo(394.46500,207.36501);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(432.36301,207.60001);c.lineTo(432.36301,224.40500);c.bezierCurveTo(432.36301,227.68600,431.64001,230.07300,430.19501,231.56500);c.bezierCurveTo(430.19501,231.56500,426.59698,233.80299,423.73801,233.80299);c.bezierCurveTo(422.98801,233.80299,422.25400,233.72501,421.53500,233.56900);c.bezierCurveTo(421.53500,233.56900,420.13699,233.17101,419.49600,232.84200);c.bezierCurveTo(419.49600,232.84200,418.26599,232.10400,417.72601,231.61200);c.bezierCurveTo(417.72601,231.61200,416.72198,230.53799,416.33099,229.86600);c.lineTo(416.09698,229.86600);c.lineTo(415.48801,233.33501);c.lineTo(412.01901,233.33501);c.lineTo(412.01901,207.60001);c.lineTo(416.28500,207.60001);c.lineTo(416.28500,220.93600);c.bezierCurveTo(416.28500,222.43600,416.39801,223.76401,416.62500,224.92000);c.bezierCurveTo(416.62500,224.92000,417.22699,227.05299,417.75000,227.85001);c.bezierCurveTo(417.75000,227.85001,418.96500,229.24800,419.82401,229.65500);c.bezierCurveTo(419.82401,229.65500,421.74600,230.26401,423.01199,230.26401);c.bezierCurveTo(424.76199,230.26401,426.04700,229.75600,426.86700,228.74100);c.bezierCurveTo(426.86700,228.74100,428.09698,226.20200,428.09698,224.17101);c.lineTo(428.09698,207.60001);c.lineTo(432.36301,207.60001);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(460.42999,226.17400);c.bezierCurveTo(459.87500,227.82201,459.10199,229.21300,458.10999,230.34599);c.bezierCurveTo(458.10999,230.34599,455.94199,232.33800,454.58301,232.92400);c.bezierCurveTo(454.58301,232.92400,451.73901,233.80299,450.13000,233.80299);c.bezierCurveTo(448.39600,233.80299,446.82901,233.50999,445.43100,232.92400);c.bezierCurveTo(445.43100,232.92400,442.84900,231.47900,441.88000,230.34599);c.bezierCurveTo(441.88000,230.34599,440.16501,227.82300,439.64200,226.17400);c.bezierCurveTo(439.64200,226.17400,438.85699,222.63901,438.85699,220.51401);c.bezierCurveTo(438.85699,218.37300,439.13400,216.47099,439.68900,214.80701);c.bezierCurveTo(439.68900,214.80701,441.01700,211.74500,442.00900,210.61200);c.bezierCurveTo(442.00900,210.61200,444.17700,208.61600,445.53601,208.02200);c.bezierCurveTo(445.53601,208.02200,448.38000,207.13100,449.98901,207.13100);c.bezierCurveTo(451.72299,207.13100,453.28601,207.42799,454.67700,208.02200);c.bezierCurveTo(454.67700,208.02200,457.25101,209.47900,458.22800,210.61200);c.bezierCurveTo(458.22800,210.61200,459.95499,213.14301,460.47800,214.80701);c.bezierCurveTo(460.47800,214.80701,461.26300,218.37300,461.26300,220.51401);c.bezierCurveTo(461.26199,222.63901,460.98401,224.52499,460.42999,226.17400);c.closePath();c.moveTo(444.84399,227.83800);c.bezierCurveTo(445.89899,229.45500,447.62900,230.26401,450.03500,230.26401);c.bezierCurveTo(450.03500,230.26401,454.17999,229.45500,455.25000,227.83800);c.bezierCurveTo(455.25000,227.83800,456.85501,223.77901,456.85501,220.51401);c.bezierCurveTo(456.85501,220.51401,456.32800,214.79100,455.27301,213.14301);c.bezierCurveTo(455.27301,213.14301,452.48801,210.67000,450.08200,210.67000);c.bezierCurveTo(450.08200,210.67000,445.93701,211.49400,444.86700,213.14301);c.bezierCurveTo(444.86700,213.14301,443.26199,217.24800,443.26199,220.51401);c.bezierCurveTo(443.26199,220.51401,443.78900,226.22099,444.84399,227.83800);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(473.34399,211.77100);c.bezierCurveTo(472.85199,212.53700,472.60599,213.67700,472.60599,215.19299);c.lineTo(472.60599,230.12300);c.lineTo(479.07501,230.12300);c.lineTo(479.07501,233.33400);c.lineTo(472.60599,233.33400);c.lineTo(472.60599,239.24001);c.lineTo(470.14499,239.24001);c.lineTo(468.31699,233.84900);c.lineTo(464.68399,232.02100);c.lineTo(464.68399,230.12300);c.lineTo(468.31699,230.12300);c.lineTo(468.31699,215.19299);c.bezierCurveTo(468.31699,213.61501,468.48901,212.30600,468.83301,211.26700);c.bezierCurveTo(468.83301,211.26700,469.64899,209.40401,470.25101,208.79401);c.bezierCurveTo(470.25101,208.79401,471.56699,207.75500,472.39600,207.50500);c.bezierCurveTo(472.39600,207.50500,474.12299,207.13000,475.09100,207.13000);c.bezierCurveTo(475.48199,207.13000,475.88000,207.14999,476.28601,207.18900);c.bezierCurveTo(476.28601,207.18900,477.08301,207.28300,477.45801,207.35300);c.bezierCurveTo(477.45801,207.35300,478.17700,207.50500,478.48901,207.59900);c.bezierCurveTo(478.48901,207.59900,479.05899,207.78700,479.26199,207.88000);c.lineTo(479.26199,211.11400);c.bezierCurveTo(479.12100,211.06700,478.91400,211.01199,478.64099,210.95000);c.bezierCurveTo(478.64099,210.95000,478.06699,210.83299,477.73901,210.78600);c.bezierCurveTo(477.73901,210.78600,477.07101,210.70000,476.71899,210.66901);c.bezierCurveTo(476.71899,210.66901,476.05099,210.62199,475.76999,210.62199);c.bezierCurveTo(474.64499,210.62300,473.83600,211.00600,473.34399,211.77100);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(496.64099,207.22501);c.bezierCurveTo(497.32101,207.28700,497.97699,207.38901,498.60999,207.53000);c.bezierCurveTo(498.60999,207.53000,499.85999,207.85001,500.46201,208.06900);c.bezierCurveTo(500.46201,208.06900,501.67700,208.54601,502.30200,208.84200);c.lineTo(502.30200,212.63901);c.bezierCurveTo(501.69299,212.35800,501.09100,212.10400,500.49701,211.87700);c.bezierCurveTo(500.49701,211.87700,499.29001,211.46300,498.65701,211.31500);c.bezierCurveTo(498.65701,211.31500,497.36801,211.05299,496.68799,210.97501);c.bezierCurveTo(496.68799,210.97501,495.26999,210.85800,494.47299,210.85800);c.bezierCurveTo(492.11401,210.85800,490.33600,211.56900,489.14099,212.99100);c.bezierCurveTo(489.14099,212.99100,487.30899,216.63200,487.23099,219.64700);c.lineTo(503.45001,219.64700);c.lineTo(503.45001,222.29500);c.bezierCurveTo(503.45001,224.01401,503.22000,225.58000,502.75900,226.99400);c.bezierCurveTo(502.75900,226.99400,501.63800,229.61900,500.77899,230.62700);c.bezierCurveTo(500.77899,230.62700,498.87299,232.41600,497.63800,232.97099);c.bezierCurveTo(497.63800,232.97099,495.01300,233.80299,493.46600,233.80299);c.bezierCurveTo(491.88800,233.80299,490.44601,233.49800,489.14200,232.88901);c.bezierCurveTo(489.14200,232.88901,486.71600,231.39301,485.77899,230.22900);c.bezierCurveTo(485.77899,230.22900,484.11499,227.64700,483.59900,225.97501);c.bezierCurveTo(483.59900,225.97501,482.82599,222.40500,482.82599,220.28000);c.bezierCurveTo(482.82599,218.17101,483.10699,216.29601,483.67001,214.65500);c.bezierCurveTo(483.67001,214.65500,485.02499,211.63901,486.04901,210.53000);c.bezierCurveTo(486.04901,210.53000,488.29501,208.57700,489.71701,207.99899);c.bezierCurveTo(489.71701,207.99899,492.70901,207.13200,494.42801,207.13200);c.bezierCurveTo(495.22299,207.13100,495.96100,207.16200,496.64099,207.22501);c.closePath();c.moveTo(495.85501,229.74800);c.bezierCurveTo(496.54300,229.40401,497.10901,228.92000,497.55399,228.29500);c.bezierCurveTo(497.55399,228.29500,498.32700,226.91600,498.53799,226.03300);c.bezierCurveTo(498.53799,226.03300,498.85400,224.17799,498.85400,223.11501);c.lineTo(487.32300,223.11501);c.bezierCurveTo(487.49500,225.44299,488.10001,227.21700,489.13901,228.43500);c.bezierCurveTo(489.13901,228.43500,491.58801,230.26300,493.36899,230.26300);c.bezierCurveTo(494.34000,230.26401,495.16800,230.09200,495.85501,229.74800);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(210.62100,150.00000);c.lineTo(210.62100,167.62500);c.bezierCurveTo(210.62100,169.15601,210.43300,170.46100,210.05901,171.53900);c.bezierCurveTo(210.05901,171.53900,209.11800,173.50400,208.36000,174.19901);c.bezierCurveTo(208.36000,174.19901,206.64101,175.40199,205.47701,175.72200);c.bezierCurveTo(205.47701,175.72200,202.93401,176.20200,201.34000,176.20200);c.bezierCurveTo(199.77800,176.20200,198.28500,175.98300,196.86301,175.54601);c.bezierCurveTo(196.86301,175.54601,194.15199,174.57700,192.99600,173.95200);c.lineTo(194.49600,170.74100);c.bezierCurveTo(195.52699,171.27200,196.60100,171.72501,197.71899,172.10001);c.bezierCurveTo(197.71899,172.10001,200.04300,172.66200,201.34000,172.66200);c.bezierCurveTo(202.15199,172.66200,202.87500,172.56799,203.50800,172.38100);c.bezierCurveTo(203.50800,172.38100,204.67200,171.88499,205.10201,171.45500);c.bezierCurveTo(205.10201,171.45500,205.86000,170.45900,206.08600,169.75600);c.bezierCurveTo(206.08600,169.75600,206.42599,168.17799,206.42599,167.13100);c.lineTo(206.42599,165.51401);c.lineTo(202.11400,165.35001);c.bezierCurveTo(198.42599,165.22501,195.67999,164.47501,193.87601,163.10001);c.bezierCurveTo(193.87601,163.10001,191.16901,159.75600,191.16901,157.19400);c.bezierCurveTo(191.16901,155.88200,191.35699,154.74500,191.73100,153.78400);c.bezierCurveTo(191.73100,153.78400,192.62601,152.02600,193.28999,151.39301);c.bezierCurveTo(193.28999,151.39301,194.73900,150.29100,195.64500,149.98700);c.bezierCurveTo(195.64500,149.98700,197.54300,149.53000,198.62199,149.53000);c.bezierCurveTo(199.60600,149.53000,200.47400,149.60800,201.22400,149.76401);c.bezierCurveTo(201.22400,149.76401,202.65401,150.16200,203.26300,150.49100);c.bezierCurveTo(203.26300,150.49100,204.43500,151.23700,204.95100,151.74500);c.bezierCurveTo(204.95100,151.74500,205.98199,152.85800,206.49800,153.56100);c.lineTo(206.68600,153.56100);c.lineTo(207.55299,149.99899);c.lineTo(210.62100,149.99899);c.closePath();c.moveTo(196.73399,153.98399);c.bezierCurveTo(195.97600,154.65601,195.59700,155.71100,195.59700,157.14799);c.bezierCurveTo(195.59700,157.94501,195.72200,158.66000,195.97200,159.29300);c.bezierCurveTo(195.97200,159.29300,196.63200,160.46500,197.20200,160.91000);c.bezierCurveTo(197.20200,160.91000,198.53400,161.70300,199.48700,161.95300);c.bezierCurveTo(199.48700,161.95300,201.62000,162.35899,203.02600,162.42200);c.lineTo(206.37801,162.58600);c.lineTo(206.37801,160.26601);c.bezierCurveTo(206.37801,159.03200,206.21001,157.95700,205.87399,157.04300);c.bezierCurveTo(205.87399,157.04300,205.07300,155.37100,204.47900,154.77000);c.bezierCurveTo(204.47900,154.77000,203.18201,153.71899,202.37000,153.42200);c.bezierCurveTo(202.37000,153.42200,200.67500,152.97701,199.72200,152.97701);c.bezierCurveTo(198.48801,152.97701,197.49200,153.31200,196.73399,153.98399);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(223.87500,154.17200);c.bezierCurveTo(223.38300,154.93800,223.13699,156.07800,223.13699,157.59399);c.lineTo(223.13699,172.52400);c.lineTo(229.60600,172.52400);c.lineTo(229.60600,175.73500);c.lineTo(223.13699,175.73500);c.lineTo(223.13699,181.64101);c.lineTo(220.67599,181.64101);c.lineTo(218.84801,176.25000);c.lineTo(215.21500,174.42200);c.lineTo(215.21500,172.52400);c.lineTo(218.84801,172.52400);c.lineTo(218.84801,157.59399);c.bezierCurveTo(218.84801,156.01601,219.02000,154.70700,219.36400,153.66800);c.bezierCurveTo(219.36400,153.66800,220.17999,151.80499,220.78200,151.19501);c.bezierCurveTo(220.78200,151.19501,222.09801,150.15601,222.92700,149.90601);c.bezierCurveTo(222.92700,149.90601,224.65401,149.53101,225.62199,149.53101);c.bezierCurveTo(226.01300,149.53101,226.41100,149.55099,226.81700,149.59000);c.bezierCurveTo(226.81700,149.59000,227.61400,149.68401,227.98900,149.75400);c.bezierCurveTo(227.98900,149.75400,228.70799,149.90601,229.02000,150.00000);c.bezierCurveTo(229.02000,150.00000,229.59000,150.18800,229.79300,150.28101);c.lineTo(229.79300,153.51500);c.bezierCurveTo(229.65199,153.46800,229.44501,153.41299,229.17200,153.35100);c.bezierCurveTo(229.17200,153.35100,228.59801,153.23399,228.27000,153.18700);c.bezierCurveTo(228.27000,153.18700,227.60201,153.10100,227.25000,153.07001);c.bezierCurveTo(227.25000,153.07001,226.58200,153.02299,226.30099,153.02299);c.bezierCurveTo(225.17599,153.02299,224.36700,153.40601,223.87500,154.17200);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(257.51999,152.39101);c.lineTo(253.48900,153.35201);c.lineTo(253.48900,180.91400);c.lineTo(257.51999,181.87500);c.lineTo(257.51999,184.26601);c.lineTo(245.09801,184.26601);c.lineTo(245.09801,181.87500);c.lineTo(249.12900,180.91400);c.lineTo(249.12900,153.35201);c.lineTo(245.09801,152.39101);c.lineTo(245.09801,150.00000);c.lineTo(257.51999,150.00000);c.lineTo(257.51999,152.39101);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(272.68399,184.26601);c.lineTo(259.91000,150.00000);c.lineTo(264.10501,150.00000);c.lineTo(276.85501,184.26601);c.lineTo(272.68399,184.26601);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(309.04700,174.43401);c.bezierCurveTo(308.41400,176.59801,307.47299,178.45000,306.22299,179.98900);c.bezierCurveTo(306.22299,179.98900,303.42999,182.71600,301.59399,183.55099);c.bezierCurveTo(301.59399,183.55099,297.62900,184.80499,295.20700,184.80499);c.bezierCurveTo(292.66000,184.80499,290.44901,184.38699,288.57401,183.55099);c.bezierCurveTo(288.57401,183.55099,285.14401,181.53101,283.91000,180.00000);c.bezierCurveTo(283.91000,180.00000,281.76199,176.62100,281.16800,174.45700);c.bezierCurveTo(281.16800,174.45700,280.27701,169.88300,280.27701,167.22701);c.bezierCurveTo(280.27701,167.22701,280.57401,162.15300,281.16800,159.97301);c.bezierCurveTo(281.16800,159.97301,282.67200,155.92999,283.89801,154.38300);c.bezierCurveTo(283.89801,154.38300,286.67099,151.64101,288.53900,150.79700);c.bezierCurveTo(288.53900,150.79700,292.61301,149.53101,295.16000,149.53101);c.bezierCurveTo(297.58200,149.53101,299.71899,149.95300,301.57001,150.79700);c.bezierCurveTo(301.57001,150.79700,304.97198,152.83600,306.22198,154.38300);c.bezierCurveTo(306.22198,154.38300,308.41299,157.78900,309.04599,159.96100);c.bezierCurveTo(309.04599,159.96100,309.99500,164.53900,309.99500,167.17999);c.bezierCurveTo(309.99600,169.85201,309.67999,172.27000,309.04700,174.43401);c.closePath();c.moveTo(285.50400,172.96899);c.bezierCurveTo(285.91000,174.67200,286.53500,176.11400,287.37900,177.29300);c.bezierCurveTo(287.37900,177.29300,289.29300,179.37900,290.59000,180.01199);c.bezierCurveTo(290.59000,180.01199,293.42599,180.96100,295.20700,180.96100);c.bezierCurveTo(295.20700,180.96100,298.51901,180.64500,299.80099,180.01199);c.bezierCurveTo(299.80099,180.01199,302.13699,178.47301,302.96500,177.29300);c.bezierCurveTo(302.96500,177.29300,304.40302,174.67200,304.79300,172.96899);c.bezierCurveTo(304.79300,172.96899,305.37900,169.33600,305.37900,167.17999);c.bezierCurveTo(305.37900,165.03900,305.18399,163.11400,304.79300,161.40300);c.bezierCurveTo(304.79300,161.40300,303.78900,158.23900,302.95300,157.04401);c.bezierCurveTo(302.95300,157.04401,301.05499,154.93500,299.76501,154.30200);c.bezierCurveTo(299.76501,154.30200,296.94101,153.35300,295.16000,153.35300);c.bezierCurveTo(295.16000,153.35300,291.84399,153.66901,290.55499,154.30200);c.bezierCurveTo(290.55499,154.30200,288.20300,155.84900,287.36700,157.04401);c.bezierCurveTo(287.36700,157.04401,285.91000,159.69200,285.50400,161.40300);c.bezierCurveTo(285.50400,161.40300,284.89499,165.03999,284.89499,167.17999);c.bezierCurveTo(284.89499,169.33600,285.09799,171.26601,285.50400,172.96899);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(347.89499,150.00000);c.lineTo(347.89499,153.89101);c.lineTo(334.46500,153.89101);c.lineTo(334.46500,184.26601);c.lineTo(330.10599,184.26601);c.lineTo(330.10599,150.00000);c.lineTo(347.89499,150.00000);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(353.48401,180.65601);c.bezierCurveTo(353.96100,180.21800,354.54999,180.00000,355.25400,180.00000);c.bezierCurveTo(355.94199,180.00000,356.53101,180.22301,357.02399,180.66800);c.bezierCurveTo(357.02399,180.66800,357.76199,181.78900,357.76199,182.69501);c.bezierCurveTo(357.76199,183.16400,357.69601,183.56599,357.56299,183.90199);c.bezierCurveTo(357.56299,183.90199,357.25101,184.51500,357.02399,184.73399);c.bezierCurveTo(357.02399,184.73399,356.53201,185.11301,356.22699,185.21400);c.bezierCurveTo(356.22699,185.21400,355.59799,185.36600,355.25400,185.36600);c.bezierCurveTo(354.55099,185.36600,353.96100,185.15500,353.48401,184.73300);c.bezierCurveTo(353.48401,184.73300,352.76901,183.63100,352.76901,182.69400);c.bezierCurveTo(352.76999,181.77299,353.00800,181.09399,353.48401,180.65601);c.closePath();c.moveTo(357.36301,175.73399);c.lineTo(353.09698,175.73399);c.lineTo(353.09698,150.00000);c.lineTo(357.36301,150.00000);c.lineTo(357.36301,175.73399);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(375.64499,150.00000);c.lineTo(384.43399,175.73399);c.lineTo(380.02802,175.73399);c.lineTo(375.36401,161.41400);c.bezierCurveTo(375.19199,160.89799,374.98901,160.23399,374.75500,159.42200);c.bezierCurveTo(374.75500,159.42200,374.28601,157.78101,374.05200,156.93800);c.bezierCurveTo(374.05200,156.93800,373.60699,155.29700,373.41901,154.54700);c.bezierCurveTo(373.41901,154.54700,373.09900,153.22701,373.02100,152.83600);c.lineTo(372.85699,152.83600);c.bezierCurveTo(372.79501,153.22701,372.66599,153.79700,372.47000,154.54700);c.bezierCurveTo(372.47000,154.54700,372.06000,156.09399,371.82501,156.93800);c.bezierCurveTo(371.82501,156.93800,371.35599,158.61000,371.12201,159.42200);c.bezierCurveTo(371.12201,159.42200,370.68399,160.89900,370.51300,161.41400);c.lineTo(365.84900,175.73399);c.lineTo(361.44299,175.73399);c.lineTo(370.23001,150.00000);c.lineTo(375.64499,150.00000);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(400.89801,149.62500);c.bezierCurveTo(401.57800,149.68700,402.23401,149.78900,402.86700,149.92999);c.bezierCurveTo(402.86700,149.92999,404.11700,150.25000,404.71899,150.46899);c.bezierCurveTo(404.71899,150.46899,405.93399,150.94600,406.55899,151.24200);c.lineTo(406.55899,155.03900);c.bezierCurveTo(405.95001,154.75800,405.34799,154.50400,404.75400,154.27699);c.bezierCurveTo(404.75400,154.27699,403.54700,153.86301,402.91400,153.71500);c.bezierCurveTo(402.91400,153.71500,401.62500,153.45300,400.94501,153.37500);c.bezierCurveTo(400.94501,153.37500,399.52701,153.25800,398.73001,153.25800);c.bezierCurveTo(396.37100,153.25800,394.59299,153.96899,393.39801,155.39101);c.bezierCurveTo(393.39801,155.39101,391.56601,159.03200,391.48801,162.04700);c.lineTo(407.70700,162.04700);c.lineTo(407.70700,164.69501);c.bezierCurveTo(407.70700,166.41400,407.47699,167.98000,407.01599,169.39400);c.bezierCurveTo(407.01599,169.39400,405.89499,172.01900,405.03601,173.02699);c.bezierCurveTo(405.03601,173.02699,403.13000,174.81599,401.89499,175.37100);c.bezierCurveTo(401.89499,175.37100,399.26999,176.20300,397.72299,176.20300);c.bezierCurveTo(396.14499,176.20300,394.70300,175.89799,393.39899,175.28900);c.bezierCurveTo(393.39899,175.28900,390.97299,173.79300,390.03601,172.62900);c.bezierCurveTo(390.03601,172.62900,388.37201,170.04700,387.85599,168.37500);c.bezierCurveTo(387.85599,168.37500,387.08301,164.80499,387.08301,162.67999);c.bezierCurveTo(387.08301,160.57100,387.36401,158.69600,387.92700,157.05499);c.bezierCurveTo(387.92700,157.05499,389.28201,154.03900,390.30600,152.92999);c.bezierCurveTo(390.30600,152.92999,392.55200,150.97701,393.97400,150.39900);c.bezierCurveTo(393.97400,150.39900,396.96600,149.53200,398.68500,149.53200);c.bezierCurveTo(399.48001,149.53101,400.21899,149.56200,400.89801,149.62500);c.closePath();c.moveTo(400.11301,172.14799);c.bezierCurveTo(400.80099,171.80400,401.36700,171.32001,401.81201,170.69501);c.bezierCurveTo(401.81201,170.69501,402.58499,169.31599,402.79599,168.43300);c.bezierCurveTo(402.79599,168.43300,403.11200,166.57800,403.11200,165.51500);c.lineTo(391.58099,165.51500);c.bezierCurveTo(391.75299,167.84300,392.35800,169.61700,393.39700,170.83501);c.bezierCurveTo(393.39700,170.83501,395.84601,172.66299,397.62701,172.66299);c.bezierCurveTo(398.59799,172.66400,399.42599,172.49200,400.11301,172.14799);c.closePath();c.fill();c.stroke();c.beginPath();c.moveTo(413.80099,151.11301);c.bezierCurveTo(413.95700,150.69901,414.16800,150.35899,414.43399,150.09300);c.bezierCurveTo(414.43399,150.09300,415.01199,149.63200,415.37201,149.50700);c.bezierCurveTo(415.37201,149.50700,416.12201,149.31900,416.54401,149.31900);c.bezierCurveTo(416.95001,149.31900,417.33701,149.38100,417.70401,149.50700);c.bezierCurveTo(417.70401,149.50700,418.38800,149.82700,418.65302,150.09300);c.bezierCurveTo(418.65302,150.09300,419.13000,150.69800,419.28601,151.11301);c.bezierCurveTo(419.28601,151.11301,419.51999,152.02299,419.51999,152.60100);c.bezierCurveTo(419.51999,153.19501,419.44199,153.69901,419.28601,154.11301);c.bezierCurveTo(419.28601,154.11301,418.91901,154.86301,418.65302,155.12100);c.bezierCurveTo(418.65302,155.12100,418.07101,155.56599,417.70401,155.68300);c.bezierCurveTo(417.70401,155.68300,416.95001,155.85899,416.54401,155.85899);c.bezierCurveTo(416.12201,155.85899,415.73199,155.80000,415.37201,155.68300);c.bezierCurveTo(415.37201,155.68300,414.70001,155.37801,414.43399,155.12100);c.bezierCurveTo(414.43399,155.12100,413.95700,154.52699,413.80099,154.11301);c.bezierCurveTo(413.80099,154.11301,413.56699,153.19501,413.56699,152.60100);c.bezierCurveTo(413.56601,152.02299,413.64499,151.52699,413.80099,151.11301);c.closePath();c.moveTo(419.19101,184.26601);c.lineTo(413.96399,184.26601);c.lineTo(415.15900,159.70399);c.lineTo(417.99500,159.70399);c.lineTo(419.19101,184.26601);c.closePath();c.fill();c.stroke();c.restore();
      };
      var group = new THREE.Object3D();
      var m = new THREE.ParticleCanvasMaterial({
        color: colors[0],
        program: prog
      });
      m.alpha = {v: 0.0};
      var p = new THREE.Particle(m);
      group.position.x = -320;
      group.position.y = -355;
      group.position.z = 2000;
      group.scale.x = group.scale.y = 1.2;
      group.addChild(p);
      scene.addChild(group);
      document.removeEventListener('click', onDocumentClick);
      document.body.style.cursor = 'pointer';
      document.body.addEventListener('click', function(e) {
        if ($(e.target).attr('id') != 'countdown-watch-again') {
          //window.location = 'http://www.google.com/io/';
          window.location = "http://hopkinsplanner.com";
        }
      }, false);
      positionAdjustment = .005;
      mouseAdjustment = 2;
      new TWEEN.Tween(camera.position)
        .to({x: 0, y: 0, z: 700}, 1000).easing(TWEEN.Easing.Circular.EaseOut).start();
      new TWEEN.Tween(group.position)
        .to({z: 200}, 2000).easing(TWEEN.Easing.Circular.EaseOut).start();
      var again = $('body').prepend('<div id="countdown-watch-again">' +
                                    '<img src="http://www.google.com/images/icons/product/chrome-42.png">' +
                                    '<a href="http://hopkinsplanner.com">See the planner ' +
                                    '</a></div>');
      $('#countdown-watch-again a').bind('click', function() {
        window.location.hash = '';
        window.location.reload(true);
        return false;
      });
      $('#countdown-watch-again').fadeIn('fast');
	  setTimeout(function(){
		window.location.reload(true);
	  }, 20000);
    }
  }

  /**
   * Set up the DOM container that will hold the Three.js scene, then initialize
   * the Three.js camera, scene and renderer. Also sets up event listeners for
   * mouse movement and keystrokes.
   * Finally fires off animate to start the loop.
   */
  function init() {

    /**
     * Set the container to fill the window.
     */
    container = document.createElement('div');
    container.style.position = 'absolute';
    container.style.top = '0';
    container.style.left = '0';
    container.style.bottom = '0';
    container.style.right = '0';
    container.style.zIndex = '9999';
    document.body.appendChild(container);

    /**
     * Set up the camera.
     */
    camera = new THREE.Camera(75, window.innerWidth / window.innerHeight,
                              0, 2000);
    camera.position.z = 700;

    /**
     * Create the new scene.
     */
    scene = new THREE.Scene();

    /**
     * Fire off the first entity.
     */
    showEntity();

    /**
     * Set up the renderer.
     */
    renderer = new THREE.CanvasRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);

    /**
     * Uncomment to show framerate stats.
     */
    if (window.Stats) {
      stats = new Stats();
      stats.domElement.style.position = 'absolute';
      stats.domElement.style.top = '0px';
      container.appendChild(stats.domElement);
    }

    /**
     * Add the canvas to the container generated by the renderer.
     */
    container.appendChild(renderer.domElement);

    document.addEventListener('mousemove', onDocumentMouseMove, false);
    document.addEventListener('keydown', onDocumentKeyDown, false);
    document.addEventListener('click', onDocumentClick, false);

    splodeEntity();

    /**
     * Fire off the animate loop.
     */
    animate();
  }

  return {
    init: init
  };

}());

countdownFinale.init();

